<exportLoaderControls:ExportLoaderControl x:Class="LegendaryExplorer.UserControls.ExportLoaderControls.ScriptEditor.UnrealScriptIDE"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:avalonedit="http://icsharpcode.net/sharpdevelop/avalonedit"
             xmlns:exportLoaderControls="clr-namespace:LegendaryExplorer.UserControls.ExportLoaderControls"
             xmlns:global="clr-namespace:LegendaryExplorer"
             xmlns:errors="clr-namespace:LegendaryExplorerCore.UnrealScript.Compiling.Errors;assembly=LegendaryExplorerCore"
             xmlns:ide="clr-namespace:LegendaryExplorer.UserControls.ExportLoaderControls.ScriptEditor.IDE"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             d:DataContext="{Binding RelativeSource={RelativeSource Self}}" 
             IsVisibleChanged="ExportLoaderControl_IsVisibleChanged" Loaded="ExportLoaderControl_Loaded">
    <xctk:BusyIndicator IsBusy="{Binding IsBusy}" BusyContent="{Binding BusyText}">
        <xctk:BusyIndicator.ProgressBarStyle>
            <Style TargetType="ProgressBar">
                <Setter Property="Maximum" Value="{Binding BusyProgressBarMax}"/>
                <Setter Property="Value" Value="{Binding BusyProgressBarValue}"/>
                <Setter Property="IsIndeterminate" Value="{Binding BusyProgressIndeterminate}"/>
                <Setter Property="Height" Value="14"/>
                <Setter Property="Margin" Value="5,0,5,5"/>
            </Style>
        </xctk:BusyIndicator.ProgressBarStyle>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="5"/>
                <RowDefinition Height="100"/>
            </Grid.RowDefinitions>
            <ide:UnrealScriptTextEditor x:Name="textEditor" Document="{Binding Document}" SyntaxHighlighting="Unrealscript"
                                        Background="#1E1E1E" Foreground="#DBDBDB" LineNumbersForeground ="#2B90AE"
                                        FontFamily="Consolas" ShowLineNumbers="True" ContextMenuOpening="TextEditor_OnContextMenuOpening" ContextMenuClosing="TextEditor_OnContextMenuClosing">
                <avalonedit:TextEditor.ContextMenu>
                    <ContextMenu>
                        <MenuItem Command="Find"/>
                        <Separator/>
                        <MenuItem Command="Undo"/>
                        <MenuItem Command="Redo"/>
                        <Separator/>
                        <MenuItem Command="Cut"/>
                        <MenuItem Command="Copy"/>
                        <MenuItem Command="Paste"/>
                        <Separator/>
                        <MenuItem Header="Find Usages In File" Command="{Binding FindUsagesInFileCommand}"/>
                    </ContextMenu>
                </avalonedit:TextEditor.ContextMenu>
                <avalonedit:TextEditor.Resources>
                    <Style TargetType="{x:Type avalonedit:TextEditor}">
                        <Setter Property="FlowDirection" Value="LeftToRight" />
                        <Setter Property="Background" Value="#1E1E1E"/>
                        <Setter Property="Foreground" Value="#DBDBDB"/>
                        <Setter Property="LineNumbersForeground" Value="Black"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type avalonedit:TextEditor}">
                                    <ControlTemplate.Resources>
                                        <Style TargetType="{x:Type avalonedit:TextView}">
                                            <Setter Property="NonPrintableCharacterBrush" Value="#3F8080FF" />
                                            <Setter Property="LinkTextForegroundBrush" Value="#FF4040FF" />
                                            <!--  Style hyperlink displayed within text in text editor  -->
                                            <Setter Property="LinkTextBackgroundBrush" Value="White" />
                                        </Style>

                                        <Style TargetType="{x:Type avalonedit:TextArea}">
                                            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                            <Setter Property="SelectionBrush" Value="#1ba1e2" />
                                            <Setter Property="SelectionBorder">
                                                <Setter.Value>
                                                    <Pen Brush="#1ba1e2" Thickness="1" />
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="SelectionCornerRadius" Value="0" />
                                            <Setter Property="SelectionForeground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type avalonedit:TextArea}">
                                                        <DockPanel Focusable="False">
                                                            <ItemsControl
                                                        DockPanel.Dock="Left"
                                                        Focusable="False"
                                                        ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=LeftMargins}">
                                                                <ItemsControl.ItemsPanel>
                                                                    <ItemsPanelTemplate>
                                                                        <StackPanel Orientation="Horizontal" />
                                                                    </ItemsPanelTemplate>
                                                                </ItemsControl.ItemsPanel>
                                                            </ItemsControl>
                                                            <ContentPresenter
                                                        Panel.ZIndex="-1"
                                                        Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TextView}"
                                                        Focusable="False" />
                                                        </DockPanel>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ControlTemplate.Resources>
                                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                                        <ScrollViewer
                                Focusable="False"
						        Name="PART_ScrollViewer"
						        CanContentScroll="True"
						        VerticalScrollBarVisibility="{TemplateBinding VerticalScrollBarVisibility}"
						        HorizontalScrollBarVisibility="{TemplateBinding HorizontalScrollBarVisibility}"
						        Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TextArea}"
						        VerticalContentAlignment="Top"
						        HorizontalContentAlignment="Left"
						        Background="{TemplateBinding Background}"
						        Padding="{TemplateBinding Padding}"
						        BorderBrush="{TemplateBinding BorderBrush}"
					            BorderThickness="{TemplateBinding BorderThickness}">
                                            <ScrollViewer.Template>
                                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                            VerticalAlignment="{TemplateBinding VerticalAlignment}">
                                                        <Grid Background="{TemplateBinding Background}"
                                              HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalAlignment}">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="*"/>
                                                                <ColumnDefinition Width="Auto"/>
                                                            </Grid.ColumnDefinitions>
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="Auto"/>
                                                            </Grid.RowDefinitions>

                                                            <!-- Display TextEditor content in upper left corner -->
                                                            <ScrollContentPresenter Grid.Column="0" Grid.Row="0"
                                                                    KeyboardNavigation.DirectionalNavigation="Local"
                                                                    CanContentScroll="True"
                                                                    CanHorizontallyScroll="True"
                                                                    CanVerticallyScroll="True"
                                                                    Content="{Binding RelativeSource={RelativeSource AncestorType={x:Type avalonedit:TextEditor}}, Path=TextArea}"/>
                                                            <!-- Display Vertical Scrollbar to the right -->
                                                            <ScrollBar Name="PART_VerticalScrollBar"
                                                       Grid.Column="1"
                                                       Value="{TemplateBinding VerticalOffset}"
                                                       Maximum="{TemplateBinding ScrollableHeight}"
                                                       ViewportSize="{TemplateBinding ViewportHeight}"
                                                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>

                                                            <!-- Display mini-toolbar and Horizontal scrollbar at the bottom of the view -->
                                                            <!-- Using DialogBackgroundBrush since Editor can use a WPF Theme independent background color -->
                                                            <!-- TODO XXX Background="{DynamicResource DialogBackgroundBrush}" -->
                                                            <Grid Grid.Column="0" Grid.Row="1">
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="*" />
                                                                </Grid.ColumnDefinitions>

                                                                <ScrollBar Name="PART_HorizontalScrollBar"
                                                           Orientation="Horizontal"
                                                           Grid.Column="0"
                                                           Value="{TemplateBinding HorizontalOffset}"
                                                           Maximum="{TemplateBinding ScrollableWidth}"
                                                           ViewportSize="{TemplateBinding ViewportWidth}"
                                                           Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                                                            </Grid>
                                                            <!-- Using DialogBackgroundBrush since Editor can use a WPF Theme independent background color -->
                                                            <DockPanel Grid.Column="1" Grid.Row="1"
                                                       LastChildFill="false"
                                                       Background="White">
                                                                <Rectangle Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Width="1" Fill="White" DockPanel.Dock="Left" />
                                                                <Rectangle Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Height="1" Fill="White" DockPanel.Dock="Top" />
                                                            </DockPanel>
                                                        </Grid>
                                                    </Border>
                                                </ControlTemplate>
                                            </ScrollViewer.Template>
                                        </ScrollViewer>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="WordWrap" Value="True">
                                            <Setter TargetName="PART_ScrollViewer" Property="HorizontalScrollBarVisibility" Value="Disabled" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <Style TargetType="avalonedit:SearchPanel">
                        <Setter Property="MarkerBrush" Value="#653306"/>
                    </Style>
                </avalonedit:TextEditor.Resources>
            </ide:UnrealScriptTextEditor>
            <GridSplitter Grid.Row="1" Height="5"  HorizontalAlignment="Stretch"/>
            <Grid Grid.Row="2"  HorizontalAlignment="Stretch" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <StackPanel Orientation="Vertical">
                    <Button Content="Decompile" Click="Decompile_OnClick" />
                    <Button Content="Compile to AST" Click="CompileAST_OnClick" Visibility="{x:Static global:App.IsDebugVisibility}" IsEnabled="{Binding FullyInitialized}"/>
                    <Button Content="Compile" Click="Compile_OnClick" IsEnabled="{Binding FullyInitialized}"/>
                </StackPanel>
                <ListBox Grid.Column="1" Name="OutputListBox" SelectionChanged="outputListBox_SelectionChanged" HorizontalContentAlignment="Left" >
                    <ListBox.Resources>
                        <DataTemplate DataType="errors:LogMessage">
                            <Grid>
                                <TextBlock Text="{Binding}" TextWrapping="Wrap" /></Grid>
                        </DataTemplate>
                    </ListBox.Resources>
                </ListBox>
            </Grid>
        </Grid>
    </xctk:BusyIndicator>
</exportLoaderControls:ExportLoaderControl>
