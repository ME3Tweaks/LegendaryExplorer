<exportLoaderControls:ExportLoaderControl x:Class="LegendaryExplorer.UserControls.ExportLoaderControls.Timeline"
                     xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                     xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                     xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                     xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                     xmlns:converters="clr-namespace:LegendaryExplorer.SharedUI.Converters"
                     xmlns:sharedUi="clr-namespace:LegendaryExplorer.SharedUI"
                     xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
                     xmlns:exportLoaderControls="clr-namespace:LegendaryExplorer.UserControls.ExportLoaderControls"
                     xmlns:interpEditor="clr-namespace:LegendaryExplorer.Tools.InterpEditor"
                     mc:Ignorable="d" 
                     d:DesignHeight="450" d:DesignWidth="800"
                     DataContext="{Binding RelativeSource={RelativeSource Self}}" PreviewMouseWheel="OnScroll" SizeChanged="Timeline_OnSizeChanged">
    <UserControl.Resources>
        <converters:TimeToPositionConverter x:Key="TimeToPositionConverter"/>
        <converters:NullOrEmptyStringVisibilityConverter x:Key="NullOrEmptyStringVisibilityConverter"/>
        <SolidColorBrush x:Key="KeyBrush" Color="#FF640000"/>
        <Color x:Key="SelectedBackgroundColor">#FFC5CBF9</Color>
        <Color x:Key="SelectedUnfocusedColor">#FFDDDDDD</Color>
        <Color x:Key="GlyphColor">#FF000000</Color>
        <Style x:Key="ExpandCollapseToggleStyle"
            TargetType="ToggleButton">
            <Setter Property="Focusable"
                Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid Width="20"
                            Height="20"
                            Background="Transparent">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetProperty="(UIElement.Visibility)"
                                            Storyboard.TargetName="Collapsed">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{x:Static Visibility.Hidden}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetProperty="(UIElement.Visibility)"
                                            Storyboard.TargetName="Expanded">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked" />
                                    <VisualState x:Name="Indeterminate" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Path x:Name="Collapsed"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Margin="1,1,1,1"
                                Data="M 6 0 L 12 5.5 L 6 11 Z">
                                <Path.Fill>
                                    <SolidColorBrush Color="{StaticResource GlyphColor}" />
                                </Path.Fill>
                            </Path>
                            <Path x:Name="Expanded"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Margin="1,1,1,1"
                                Data="M 0 5.5 L 12 5.5 L 6 11 Z"
                                Visibility="Hidden">
                                <Path.Fill>
                                    <SolidColorBrush Color="{StaticResource GlyphColor}" />
                                </Path.Fill>
                            </Path>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TreeViewItemFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border>
                            <Rectangle Margin="0,0,0,0"
                                    StrokeThickness="5"
                                    Stroke="Black"
                                    StrokeDashArray="1 2"
                                    Opacity="0" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type TreeViewItem}">
            <Setter Property="IsSelected" Value="{Binding Path=IsSelected, Mode=TwoWay}" />
            <Setter Property="IsExpanded" Value="{Binding Path=IsExpanded, Mode=TwoWay}" />
            <Setter Property="Background"
                Value="Transparent" />
            <Setter Property="HorizontalContentAlignment"
                Value="{Binding Path=HorizontalContentAlignment,
                RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <Setter Property="VerticalContentAlignment"
                Value="{Binding Path=VerticalContentAlignment,
                RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <Setter Property="Padding"
                Value="1,0,0,0" />
            <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="FocusVisualStyle"
                Value="{StaticResource TreeViewItemFocusVisual}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MinWidth="19"
                                                Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                                        Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                    Value="{StaticResource SelectedBackgroundColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unselected" />
                                    <VisualState x:Name="SelectedInactive">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                                        Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                    Value="{StaticResource SelectedUnfocusedColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ExpansionStates">
                                    <VisualState x:Name="Expanded">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetProperty="(UIElement.Visibility)"
                                            Storyboard.TargetName="ItemsHost">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Collapsed" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="Bd"
                                Grid.Column="0"
                                Grid.ColumnSpan="2"
                                Grid.Row="0"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}">
                                <ContentPresenter x:Name="PART_Header"
                                                ContentSource="Header"
                                                HorizontalAlignment="Stretch" />
                            </Border>
                            <ToggleButton x:Name="Expander"
                                        Style="{StaticResource ExpandCollapseToggleStyle}"
                                        ClickMode="Press"
                                        Grid.Row="0"
                                        Grid.Column="0"
                                        Margin="4 0 0 0"
                                        IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" />
                            <ItemsPresenter x:Name="ItemsHost"
                                        Grid.Row="1"
                                        Grid.Column="0"
                                        Grid.ColumnSpan="2"
                                        Visibility="Collapsed" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="Expander"
                                    Property="Visibility"
                                    Value="Hidden" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="HasHeader" Value="false" />
                                    <Condition Property="Width" Value="Auto" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PART_Header"
                                    Property="MinWidth"
                                    Value="75" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="HasHeader" Value="false" />
                                    <Condition Property="Height" Value="Auto" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PART_Header"
                                    Property="MinHeight"
                                    Value="19" />
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </UserControl.Resources>
    <DockPanel>
        <StackPanel Orientation="Horizontal" DockPanel.Dock="Top" Background="Black">
            <StackPanel.Resources>
                <SolidColorBrush x:Key="ToolBarButtonMouseOverColor" Color="#FFDC9700"/>
                <SolidColorBrush x:Key="ToolBarButtonPressedColor" Color="#FFD67703"/>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="#FF323232"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="Foreground" Value="#FFC9C9C9"/>
                    <Setter Property="FontSize" Value="14"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Grid Margin="1,1,1,1">
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition Height="3"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="3"/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="3"/>
                                    </Grid.ColumnDefinitions>
                                    <Border x:Name="Bd" Grid.RowSpan="2"  Grid.ColumnSpan="3" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True" CornerRadius="5">
                                    </Border>
                                    <ContentPresenter x:Name="cPresenter" Grid.Column="1" Margin="{TemplateBinding BorderThickness}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RenderTransformOrigin="0.5,0.5">
                                    </ContentPresenter>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ToolBarButtonMouseOverColor}"/>
                                        <Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonMouseOverColor}"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ToolBarButtonPressedColor}"/>
                                        <Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonPressedColor}"/>
                                        <Setter Property="RenderTransform" TargetName="cPresenter">
                                            <Setter.Value>
                                                <TranslateTransform Y="1"/>
                                            </Setter.Value>
                                        </Setter>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </StackPanel.Resources>
            <Button x:Name="btnAddGroup" Content="Add InterpGroup" Command="{Binding AddInterpGroupCmd}"
                    sharedUi:Bindings.VisibilityToEnabled="True"/>
            <Button x:Name="btnAddDirector" Content="Add InterpGroupDirector" Command="{Binding AddInterpGroupCmd}" 
                    CommandParameter="Director" sharedUi:Bindings.VisibilityToEnabled="True"/>
            <TextBlock x:Name="txtStrRef" Text="{Binding LineStrRef}" Foreground="#FFC9C9C9" Margin="7,3"
                       Visibility="{Binding LineStrRef, Converter={StaticResource NullOrEmptyStringVisibilityConverter}}"/>
        </StackPanel>
        <Grid Background="#FF5C5C5C">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="200" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="50" />
            </Grid.RowDefinitions>
            <Canvas Grid.Column="0" Grid.Row="0" Background="#FF3C3C3C" />
            <Canvas Grid.Column="1" Grid.Row="1" Background="#FF505050" Name="Guide" Cursor="ScrollWE"
                    ForceCursor="True"
                    PreviewMouseDown="Guide_OnPreviewMouseDown" PreviewMouseUp="Guide_OnPreviewMouseUp"
                    PreviewMouseMove="Guide_OnPreviewMouseMove" MouseLeave="Guide_OnMouseLeave">
                <Canvas.Resources>
                    <Style TargetType="{x:Type Line}">
                        <Setter Property="StrokeThickness" Value="1" />
                        <Setter Property="Stroke" Value="#FF9C9C9C" />
                        <Setter Property="Y2"
                                Value="{Binding Path=ActualHeight, RelativeSource={RelativeSource AncestorType=Canvas}}" />
                    </Style>
                    <Style TargetType="Label">
                        <Setter Property="Foreground" Value="#FFE0E0E0" />
                        <Setter Property="FontFamily" Value="/LegendaryExplorer;component/Resources/Fonts/KismetFont.ttf#FFF Hero" />
                        <Setter Property="FontSize" Value="10" />
                    </Style>
                </Canvas.Resources>
            </Canvas>
            <Canvas Grid.Column="0" Grid.Row="1" Background="Black" />
            <TreeView Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="0" ItemsSource="{Binding InterpGroups}"
                      Background="{x:Null}" SelectedItemChanged="TreeView_SelectedItemChanged" Name="MatineeTree">
                <TreeView.Resources>
                    <HierarchicalDataTemplate DataType="{x:Type interpEditor:InterpGroup}" ItemsSource="{Binding Tracks}">
                        <Border BorderBrush="Black" BorderThickness="0 1 0 0" HorizontalAlignment="Stretch">
                            <Grid HorizontalAlignment="Stretch" Height="24" Background="#FF818181">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="196" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Canvas Grid.Column="0">
                                    <TextBlock Text="{Binding GroupName}" Canvas.Left="25" Canvas.Top="3" Foreground="Black"/>
                                    <Rectangle Width="10" Height="24" Canvas.Right="0">
                                        <Rectangle.Fill>
                                            <SolidColorBrush Color="{Binding GroupColor}" />
                                        </Rectangle.Fill>
                                    </Rectangle>
                                </Canvas>
                            </Grid>
                            <b:Interaction.Triggers>
                                <b:EventTrigger EventName="PreviewMouseRightButtonDown">
                                    <b:ChangePropertyAction PropertyName="IsSelected" Value="true" TargetObject="{Binding}"/>
                                </b:EventTrigger>
                            </b:Interaction.Triggers>
                        </Border>
                    </HierarchicalDataTemplate>
                    <DataTemplate DataType="{x:Type interpEditor:InterpTrack}">
                        <Border BorderBrush="Black" BorderThickness="0 1" HorizontalAlignment="Stretch">
                            <Grid HorizontalAlignment="Stretch" Height="24">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="196" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <ItemsControl Grid.Column="1" ItemsSource="{Binding Keys}">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <Canvas />
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                    <ItemsControl.ItemContainerStyle>
                                        <Style TargetType="interpEditor:Key">
                                            <Setter Property="Canvas.Left">
                                                <Setter.Value>
                                                    <MultiBinding Converter="{StaticResource TimeToPositionConverter}">
                                                        <Binding Path="Time" RelativeSource="{RelativeSource Self}" />
                                                        <Binding Path="Scale"
                                                                 RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=UserControl}" />
                                                        <Binding Path="Offset"
                                                                 RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=UserControl}" />
                                                    </MultiBinding>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="Canvas.ToolTip">
                                                <Setter.Value>
                                                    <Binding Path="ToolTip" RelativeSource="{RelativeSource Self}" />

                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="ToolTipService.InitialShowDelay" Value="0" />
                                            <Setter Property="Canvas.Bottom" Value="0" />
                                            <!--<Setter Property="Cursor" Value="Hand"/>-->
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate>
                                                        <Path Data="M -8 8 L 0 0 L 8 8 Z">
                                                            <Path.Fill>
                                                                <SolidColorBrush Color="#FF640000" />
                                                            </Path.Fill>
                                                        </Path>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ItemsControl.ItemContainerStyle>
                                </ItemsControl>
                                <Canvas Grid.Column="0" Background="DarkGray">
                                    <TextBlock Text="{Binding TrackTitle}" Canvas.Left="30" Canvas.Top="3" Foreground="Black" />
                                </Canvas>
                            </Grid>
                            <b:Interaction.Triggers>
                                <b:EventTrigger EventName="PreviewMouseRightButtonDown">
                                    <b:ChangePropertyAction PropertyName="IsSelected" Value="true" TargetObject="{Binding}"/>
                                </b:EventTrigger>
                            </b:Interaction.Triggers>
                        </Border>
                    </DataTemplate>
                    <!--<Style TargetType="{x:Type TreeViewItem}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TreeViewItem}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition MinWidth="19" Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <ToggleButton x:Name="Expander" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Style="{DynamicResource ExpandCollapseToggleStyle}"/>
                                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="1" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                        <ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </Border>
                                    <ItemsPresenter x:Name="ItemsHost" Grid.Column="1" Grid.Row="1" Margin="-12,0,0,0"/>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsExpanded" Value="false">
                                        <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                                    </Trigger>
                                    <Trigger Property="HasItems" Value="false">
                                        <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="true">
                                        <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsSelected" Value="true"/>
                                            <Condition Property="IsSelectionActive" Value="false"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                                    </MultiTrigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="true">
                            <Setter Property="ItemsPanel">
                                <Setter.Value>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel/>
                                    </ItemsPanelTemplate>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </Style.Triggers>
                </Style>-->

                </TreeView.Resources>
                <TreeView.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Add New InterpTrack" Command="{Binding AddTrackCmd}" sharedUi:Bindings.VisibilityToEnabled="True"/>
                        <MenuItem Header="Open Selection in Package Editor" Command="{Binding OpenSelection}"
                                  CommandParameter="Track" />
                        <MenuItem Header="Open InterpData in Package Editor" Command="{Binding OpenInterpData}"
                                  CommandParameter="Data" />
                        <MenuItem Header="Rename Track" Command="{Binding RenameTrackCommand}" />
                    </ContextMenu>
                </TreeView.ContextMenu>
            </TreeView>
        </Grid>
    </DockPanel>
</exportLoaderControls:ExportLoaderControl>
