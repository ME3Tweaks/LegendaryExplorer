<exportLoaderControls:ExportLoaderControl x:Class="LegendaryExplorer.UserControls.ExportLoaderControls.MeshRenderer"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:converters="clr-namespace:LegendaryExplorer.SharedUI.Converters"
             xmlns:scene3D="clr-namespace:LegendaryExplorer.UserControls.SharedToolControls.Scene3D"
             xmlns:exportLoaderControls="clr-namespace:LegendaryExplorer.UserControls.ExportLoaderControls"
             xmlns:sharedUi="clr-namespace:LegendaryExplorer.SharedUI"
             xmlns:legendaryExplorer="clr-namespace:LegendaryExplorer"
             mc:Ignorable="d" 
             Loaded="MeshRenderer_Loaded"
             Unloaded="MeshRenderer_Unloaded"
             d:DesignHeight="450" d:DesignWidth="800"
             KeyDown="MeshRendererWPF_OnKeyDown"
             KeyUp="MeshRendererWPF_OnKeyUp"
             d:DataContext="{Binding RelativeSource={RelativeSource Self}}">
    <Control.Resources>
        <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
    </Control.Resources>
    <xctk:BusyIndicator IsBusy="{Binding IsBusy}" BusyContent="{Binding BusyText}">
        <xctk:BusyIndicator.ProgressBarStyle>
            <Style TargetType="ProgressBar">
                <Setter Property="Maximum" Value="{Binding BusyProgressBarMax}"/>
                <Setter Property="Value" Value="{Binding BusyProgressBarValue}"/>
                <Setter Property="IsIndeterminate" Value="{Binding BusyProgressIndeterminate}"/>
                <Setter Property="Height" Value="14"/>
                <Setter Property="Margin" Value="5,0,5,5"/>
            </Style>
        </xctk:BusyIndicator.ProgressBarStyle>
        <DockPanel>
            <StatusBar DockPanel.Dock="Bottom">
                <StackPanel Orientation="Horizontal">
                    <CheckBox Name="Wireframe_Checkbox" IsChecked="{Binding Wireframe}" Content="Wireframe"  VerticalAlignment="Center" Margin="2,0"/>
                    <CheckBox Name="Solid_Checkbox" IsChecked="{Binding Solid}"  Content="Solid"  VerticalAlignment="Center"  Margin="2,0"/>
                    <CheckBox Name="FirstPerson_Checkbox" IsChecked="{Binding FirstPerson}"  Content="FirstPerson"  VerticalAlignment="Center" Margin="2,0"/>
                    <CheckBox Name="Rotating_Checkbox" IsChecked="{Binding Rotating}"  Content="Rotating"  VerticalAlignment="Center" Margin="2,0"/>
                    <CheckBox Name="CollisionMesh_Checkbox" IsChecked="{Binding ShowCollisionMesh}" Content="Collision Mesh" 
                          Visibility="{Binding IsStaticMesh, Converter={StaticResource BoolToVisibilityConverter}}"  VerticalAlignment="Center" Margin="2,0"/>
                    <CheckBox Name="ShowMemory_Checkbox" 
                              IsChecked="{Binding ShowMemoryUsage}" 
                              Content="Show memory usage" 
                              Visibility="{Binding Path=(legendaryExplorer:App.IsDebug), Converter={StaticResource BoolToVisibilityConverter}, Mode=OneTime}"  
                              VerticalAlignment="Center" Margin="2,0"/>
                    <ComboBox Name="LODPicker_ComboBox" VerticalAlignment="Center" HorizontalAlignment="Left" FontSize="11" Width="55" ItemsSource="{Binding LODPicker}" 
                              SelectedIndex="{Binding CurrentLOD, Mode=TwoWay}" ToolTip="Change the visible LOD" Margin="2,0" FontStretch="UltraCondensed"/>
                    <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" Margin="2,0"/>

                    <xctk:DropDownButton Content="View options" Margin="0,3">
                        <xctk:DropDownButton.DropDownContent>
                            <scene3D:SceneControlOptionsControl/>
                        </xctk:DropDownButton.DropDownContent>
                    </xctk:DropDownButton>
                    <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" Margin="2,0"/>
                    <Button Command="{Binding UModelExportCommand}"  ToolTip="Export with umodel" Margin="2,0"
                            sharedUi:Bindings.VisibilityToEnabled="true">
                        <Image Source="/Resources/Images/umodel.ico" Width="16" RenderOptions.BitmapScalingMode="HighQuality"/>
                    </Button>
                </StackPanel>
            </StatusBar>
            <Grid>
                <Expander Canvas.ZIndex="3" VerticalAlignment="Top" HorizontalAlignment="Left" ExpandDirection="Down" IsExpanded="False" Background="Transparent" Header="Camera info" Padding="3">
                    <StackPanel>
                        <Grid Margin="3,2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="40"/>
                                <ColumnDefinition Width="60"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Text="FOV:" Margin="0,0,3,0" VerticalAlignment="Center"/>
                            <xctk:DoubleUpDown Grid.Column="1" Value="{Binding CameraFOV}"
                                               Increment="1"
                                               Minimum="1"
                                               Maximum="170"/>
                        </Grid>
                        <Grid Margin="3,2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="40"/>
                                <ColumnDefinition Width="60"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Text="ZNear:" Margin="0,0,3,0" VerticalAlignment="Center"/>
                            <xctk:DoubleUpDown Grid.Column="1" Value="{Binding CameraZNear}"
                                               Increment="0.01"
                                               Maximum="1"
                                               Minimum="0.00000001"/>
                        </Grid>
                        <Grid Margin="3,2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="40"/>
                                <ColumnDefinition Width="60"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Text="ZFar:" Margin="0,0,3,0" VerticalAlignment="Center"/>
                            <xctk:DoubleUpDown Grid.Column="1" Value="{Binding CameraZFar}"/>
                        </Grid>
                        <StackPanel Orientation="Horizontal">
                            <RadioButton Content="Degrees" GroupName="UnitType" IsChecked="{Binding UseDegrees}"/>
                            <RadioButton Content="Radians" GroupName="UnitType"  IsChecked="{Binding UseRadians}" Margin="3,0"/>
                            <RadioButton Content="Unreal" GroupName="UnitType" IsChecked="{Binding UseUnreal}"/>
                        </StackPanel>
                        <TextBlock Text="{Binding CameraX, StringFormat='X: {0}'}" Margin="3,2" MouseDown="CameraPropsMouseDown" ToolTip="Double click to copy value"/>
                        <TextBlock Text="{Binding CameraY, StringFormat='Y: {0}'}" Margin="3,2" MouseDown="CameraPropsMouseDown" ToolTip="Double click to copy value"/>
                        <TextBlock Text="{Binding CameraZ, StringFormat='Z: {0}'}" Margin="3,2" MouseDown="CameraPropsMouseDown" ToolTip="Double click to copy value"/>
                        <TextBlock Text="{Binding CameraPitch, StringFormat='Pitch: {0}'}" Margin="3,2" MouseDown="CameraPropsMouseDown" ToolTip="Double click to copy value"/>
                        <TextBlock Text="{Binding CameraYaw, StringFormat='Yaw: {0}'}" Margin="3,2" MouseDown="CameraPropsMouseDown" ToolTip="Double click to copy value"/>

                    </StackPanel>
                </Expander>
                <!--<StackPanel Orientation="Vertical" Canvas.ZIndex="4" VerticalAlignment="Top" HorizontalAlignment="Right" Background="#99AAAAAA" Visibility="{Binding ShowMemoryUsage, Converter={StaticResource BoolToVisibilityConverter}}">
                    <TextBlock Text="Memory Information" FontWeight="Bold"/>
                    <ItemsControl ItemsSource="{Binding SceneViewerProperty}">
                        <ItemsControl.Resources>
                            <DataTemplate DataType="{x:Type scene3D:PreviewTextureCache+PreviewTextureEntry}">
                                    <TextBlock Text="{Binding InstanceFullPath}"/>
                            </DataTemplate>
                        </ItemsControl.Resources>
                    </ItemsControl>
                </StackPanel>-->
                <scene3D:SceneRenderControl Canvas.ZIndex="0"  x:Name="SceneViewer" Render="SceneViewer_Render" />
            </Grid>
        </DockPanel>
    </xctk:BusyIndicator>
</exportLoaderControls:ExportLoaderControl>
