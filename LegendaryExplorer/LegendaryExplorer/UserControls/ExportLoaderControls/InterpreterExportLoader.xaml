<global:ExportLoaderControl x:Class="LegendaryExplorer.UserControls.ExportLoaderControls.InterpreterExportLoader"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
             xmlns:hb1="clr-namespace:Be.Windows.Forms;assembly=Be.Windows.Forms.HexBox"
             mc:Ignorable="d" 
             Loaded="Interpreter_Loaded"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:fa="http://schemas.fontawesome.com/icons/"
             xmlns:unreal="clr-namespace:LegendaryExplorerCore.Unreal;assembly=LegendaryExplorerCore"
             xmlns:global="clr-namespace:LegendaryExplorer.UserControls.ExportLoaderControls"
             xmlns:Converters="clr-namespace:LegendaryExplorer.SharedUI.Converters"
             xmlns:SharedUI="clr-namespace:LegendaryExplorer.SharedUI"
             xmlns:appsettings="clr-namespace:LegendaryExplorer.Misc.AppSettings"
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:controls="clr-namespace:LegendaryExplorer.SharedUI.Controls"
             xmlns:peregrineTreeView="clr-namespace:LegendaryExplorer.SharedUI.PeregrineTreeView"
             DataContext="{Binding RelativeSource={RelativeSource Self}}"
             d:DesignWidth="800"
             d:DesignHeight="500">
    <UserControl.Resources>
        <Converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <Converters:NullEnabledConverter x:Key="NullEnabledConverter"/>
        <Converters:UPropertyColorPickerVisibilityConverter x:Key="UPropertyColorPickerVisibilityConverter"/>
        <Converters:NullOrEmptyStringVisibilityConverter x:Key="NullOrEmptyStringVisibilityConverter"/>
        <Converters:ColorCodeConverter x:Key="ColorCodeConverter"/>
        <Converters:UnsavedChangesForegroundConverter x:Key="UnsavedChangesForegroundConverter"/>
    </UserControl.Resources>
    <DockPanel Name="InterpreterWPF_DockPanel">
        <ToolBar ToolBarTray.IsLocked="True" DockPanel.Dock="Top">
            <Button Name="SaveHexChange_Button" ToolTip="Commit hex changes to the export" Content="Save Hex Changes" Command="{Binding SaveHexChangesCommand}"
                    Foreground="{Binding HasUnsavedChanges, Converter={StaticResource UnsavedChangesForegroundConverter}}"/>
            <Button Name="ToggleHexbox_Button" ToolTip="Toggle Hexbox" Command="{Binding ToggleHexBoxCommand}">
                <fa:ImageAwesome Icon="Solid_Microchip" Height="16" Width="16" Foreground="CornflowerBlue"/>
            </Button>
            <Separator Name="SaveToggle_Separator" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />
            <Button Content="Add Property" ToolTip="Add a property from this class or a superclass to this object" Command="{Binding AddPropertyCommand}"/>

            <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />
            <Label IsEnabled="False">Array:</Label>
            <Button Name="AddArrayElement_Button" ToolTip="Add a new element to the selected array"
                    Command="{Binding AddArrayElementCommand}"
                    VerticalAlignment="Center">
                <fa:FontAwesome Icon="Solid_Plus"/>
            </Button>
            <Button Name="RemoveArrayElement_Button" ToolTip="Remove the selected element from the array"
                    Command="{Binding RemoveArrayElementCommand}"
                    VerticalAlignment="Center">
                <fa:FontAwesome Icon="Solid_Minus"/>
            </Button>
            <Button Name="ArrayElement_MoveUp_Button" ToolTip="Move the selected array element up in the list" VerticalAlignment="Center" Width="22"
                    Command="{Binding MoveArrayElementUpCommand}">
                <fa:FontAwesome Icon="Solid_ArrowUp" />
            </Button>
            <Button Name="ArrayElement_MoveDown_Button" ToolTip="Move the selected array element down in the list" VerticalAlignment="Center"  Width="22"
                    Command="{Binding MoveArrayElementDownCommand}" >
                <fa:FontAwesome Icon="Solid_ArrowDown" />
            </Button>
            <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}"/>
            <TextBox Width="80" Name="Value_TextBox" VerticalAlignment="Center" ToolTip="Value for this property" KeyDown="ValueTextBox_KeyDown" TextChanged="Value_TextBox_TextChanged" IsEnabled="{Binding CurrentLoadedExport, Converter={StaticResource NullEnabledConverter}}" Margin="0" Style="{StaticResource {x:Type TextBox}}"/>
            <ComboBox Name="Value_ComboBox" MinWidth="80" VerticalAlignment="Center" ToolTip="Value for this property" Style="{StaticResource {x:Type ComboBox}}" IsTextSearchEnabled="True">
                <ComboBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel />
                    </ItemsPanelTemplate>
                </ComboBox.ItemsPanel>
                <ComboBox.Resources>
                    <DataTemplate DataType="{x:Type SharedUI:IndexedName}">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{Binding Path=Index, Mode=OneTime}" Foreground="Gray"/>
                            <TextBlock Text="{Binding Path=Name, Mode=OneTime}" Margin="5,0,0,0"/>
                        </StackPanel>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type unreal:NameReference}">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{Binding Path=Instanced}" Margin="5,0,0,0"/>
                        </StackPanel>
                    </DataTemplate>
                </ComboBox.Resources>
            </ComboBox>
            <TextBlock Text="Index:" Name="NameIndexPrefix_TextBlock" VerticalAlignment="Center" Margin="5,0,2,0"/>
            <TextBox Width="30" Name="NameIndex_TextBox" VerticalAlignment="Center" ToolTip="Value for this property" KeyDown="ValueTextBox_KeyDown" IsEnabled="{Binding CurrentLoadedExport, Converter={StaticResource NullEnabledConverter}}" Style="{StaticResource {x:Type TextBox}}"/>
            <Button Name="Set_Button" Content="Set" ToolTip="Sets the selected property to this value" Click="SetValue_Click" VerticalAlignment="Stretch" Padding="10,0,10,0" Style="{StaticResource {x:Type Button}}"/>
            <TextBlock Name="ParsedValue_TextBlock" VerticalAlignment="Center" Foreground="Gray" Margin="5,0,0,0"/>
        </ToolBar>
        <StatusBar Height="23" DockPanel.Dock="Bottom" Name="HexInfoStatusBar">
            <StatusBarItem>
                <TextBlock Name="StatusBar_LeftMostText" Text="Nothing selected"/>
            </StatusBarItem>
        </StatusBar>
        <Grid Margin="0,1,0,-1">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition MinWidth="{Binding HexBoxMinWidth}" MaxWidth="{Binding HexBoxMaxWidth}" Width="{Binding HexBoxMinWidth, Mode=OneWay}" Name="HexboxColumnDefinition" />
                <ColumnDefinition Width="1" Name="HexboxColumn_GridSplitter_ColumnDefinition"/>
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid Name="hexBoxContainer">
                <SharedUI:WindowsFormsHostEx Grid.Row="0" x:Name="Interpreter_Hexbox_Host" HorizontalAlignment="Stretch"
                                  VerticalAlignment="Stretch">
                    <hb1:HexBox MinBytesPerLine="4" MaxBytesPerLine="16" ColumnInfoVisible="True"
                                LineInfoVisible="True" Font="Courier New,10" BoldFont="Consolas,10"
                                StringViewVisible="True" VScrollBarVisible="True" />
                </SharedUI:WindowsFormsHostEx>
                <Image Grid.Column="0" Visibility="Collapsed" Name="hexboxImageSub" Stretch="None" />
            </Grid>
            <GridSplitter 
                Name="HexProps_GridSplitter"
                Grid.Column="1" 
                      Grid.Row="0" HorizontalAlignment="Stretch" 
                      Margin="-5,0"
                      BorderThickness="5,0"
                      BorderBrush="Transparent"
                      Panel.ZIndex="60"/>
            <controls:StretchingTreeView x:Name="Interpreter_TreeView" Grid.Row="0" Grid.Column="2" Width="Auto" 
                                         FontFamily="Consolas" SelectedItemChanged="Interpreter_TreeViewSelectedItemChanged" 
                                         ItemsSource="{Binding PropertyNodes, Mode=OneTime}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" 
                                         VirtualizingPanel.IsVirtualizing="True" VirtualizingPanel.VirtualizationMode="Recycling">
                <controls:StretchingTreeView.Resources>
                    <HierarchicalDataTemplate DataType="{x:Type global:UPropertyTreeViewEntry}" ItemsSource="{Binding ChildrenProperties, Mode=OneTime}">
                        <Border x:Name="PropertyItem_Container" Margin="1" Padding="{Binding Path=(SharedUI:TouchComfySettings.InterpreterWPFNodeMargin)}">
                            <Grid HorizontalAlignment="Stretch">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock x:Name="PropertyItem_Offset" Text="{Binding Property.StartOffset, StringFormat='{}{0:X5}:', Mode=OneTime}" VerticalAlignment="Top" Padding="0,0,4,0"
                                               Visibility="{Binding ShowPropOffsets, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=global:InterpreterExportLoader}, Converter={StaticResource BoolToVisibilityConverter}}" />
                                    <TextBlock x:Name="PropertyItem_DisplayName" Text="{Binding DisplayName, Mode=OneTime}" VerticalAlignment="Top" Padding="2,0,0,0"/>
                                    <TextBlock x:Name="PropertyItem_EditableValue" Margin="5,0,0,0" Text="{Binding EditableValue, Mode=OneTime}" VerticalAlignment="Top" FontWeight="Bold" 
                                               Visibility="{Binding EditableValue, Converter={StaticResource NullOrEmptyStringVisibilityConverter}, Mode=OneTime}"/>
                                    <TextBlock x:Name="PropertyItem_ParsedValue" Margin="5,0,0,0" Text="{Binding ParsedValue, Mode=OneTime}" VerticalAlignment="Center" FontStyle="Italic"/>
                                    <xctk:ColorPicker Margin="5,0,0,0" Visibility="{Binding Property, Converter={StaticResource UPropertyColorPickerVisibilityConverter}, Mode=OneTime}" 
                                                      SelectedColor="{Binding ColorStructCode,Converter={StaticResource ColorCodeConverter}}" Width="60" Closed="ColorPicker_Closed"/>
                                </StackPanel>
                                <TextBlock Grid.Row="1" x:Name="PropertyItem_DisplayType" FontSize="10" Text="{Binding PropertyType, Mode=OneTime}" VerticalAlignment="Center" Margin="5,0,0,0"
                                           Visibility="{Binding AdvancedView, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=global:InterpreterExportLoader}, Converter={StaticResource BoolToVisibilityConverter}}"/>
                            </Grid>
                            <b:Interaction.Triggers>
                                <b:EventTrigger EventName="PreviewMouseRightButtonDown">
                                    <b:ChangePropertyAction PropertyName="IsSelected" Value="true" TargetObject="{Binding}"/>
                                </b:EventTrigger>
                            </b:Interaction.Triggers>
                        </Border>
                        <HierarchicalDataTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RawPropertyType}" Value="ObjectProperty" />
                                    <Condition Binding="{Binding Path=(appsettings:Settings.Interpreter_Colorize)}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="PropertyItem_DisplayType" Property="Foreground" Value="#6d6c3f"/>
                                <Setter TargetName="PropertyItem_Container" Property="Background" Value="#88fffec4"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RawPropertyType}" Value="FloatProperty" />
                                    <Condition Binding="{Binding Path=(appsettings:Settings.Interpreter_Colorize)}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="PropertyItem_DisplayType" Property="Foreground" Value="#004f46"/>
                                <Setter TargetName="PropertyItem_Container" Property="Background" Value="#4400ffaa"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RawPropertyType}" Value="IntProperty" />
                                    <Condition Binding="{Binding Path=(appsettings:Settings.Interpreter_Colorize)}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="PropertyItem_DisplayType" Property="Foreground" Value="#664f46"/>
                                <Setter TargetName="PropertyItem_Container" Property="Background" Value="#AAffeae2"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RawPropertyType}" Value="StrProperty" />
                                    <Condition Binding="{Binding Path=(appsettings:Settings.Interpreter_Colorize)}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="PropertyItem_DisplayType" Property="Foreground" Value="#071f06"/>
                                <Setter TargetName="PropertyItem_Container" Property="Background" Value="#6632aaf4"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RawPropertyType}" Value="ArrayProperty" />
                                    <Condition Binding="{Binding Path=(appsettings:Settings.Interpreter_Colorize)}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="PropertyItem_DisplayType" Property="Foreground" Value="#382c4c"/>
                                <Setter TargetName="PropertyItem_Container" Property="Background" Value="#99ffe2ba"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RawPropertyType}" Value="BoolProperty" />
                                    <Condition Binding="{Binding Path=(appsettings:Settings.Interpreter_Colorize)}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="PropertyItem_DisplayType" Property="Foreground" Value="#43563a"/>
                                <Setter TargetName="PropertyItem_Container" Property="Background" Value="#88ecffe2"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RawPropertyType}" Value="StructProperty" />
                                    <Condition Binding="{Binding Path=(appsettings:Settings.Interpreter_Colorize)}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="PropertyItem_DisplayType" Property="Foreground" Value="#593953"/>
                                <Setter TargetName="PropertyItem_Container" Property="Background" Value="#88f4beea"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RawPropertyType}" Value="ByteProperty" />
                                    <Condition Binding="{Binding Path=(appsettings:Settings.Interpreter_Colorize)}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="PropertyItem_DisplayType" Property="Foreground" Value="#474647"/>
                                <Setter TargetName="PropertyItem_Container" Property="Background" Value="#88afaeaf"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RawPropertyType}" Value="EnumProperty" />
                                    <Condition Binding="{Binding Path=(appsettings:Settings.Interpreter_Colorize)}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="PropertyItem_DisplayType" Property="Foreground" Value="#390268"/>
                                <Setter TargetName="PropertyItem_Container" Property="Background" Value="#66A972ff"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RawPropertyType}" Value="BioMask4Property" />
                                    <Condition Binding="{Binding Path=(appsettings:Settings.Interpreter_Colorize)}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="PropertyItem_DisplayType" Property="Foreground" Value="#474647"/>
                                <Setter TargetName="PropertyItem_Container" Property="Background" Value="#88afaeaf"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RawPropertyType}" Value="NameProperty" />
                                    <Condition Binding="{Binding Path=(appsettings:Settings.Interpreter_Colorize)}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="PropertyItem_DisplayType" Property="Foreground" Value="#4a5568"/>
                                <Setter TargetName="PropertyItem_Container" Property="Background" Value="#88e2edff"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RawPropertyType}" Value="Unknown" />
                                    <Condition Binding="{Binding Path=(appsettings:Settings.Interpreter_Colorize)}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="PropertyItem_DisplayType" Property="Foreground" Value="White"/>
                                <Setter TargetName="PropertyItem_EditableValue" Property="Foreground" Value="White"/>
                                <Setter TargetName="PropertyItem_ParsedValue" Property="Foreground" Value="White"/>
                                <Setter TargetName="PropertyItem_Container" Property="Background" Value="Red"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RawPropertyType}" Value="None" />
                                    <Condition Binding="{Binding Path=(appsettings:Settings.Interpreter_Colorize)}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="PropertyItem_DisplayType" Property="Foreground" Value="#6d4818"/>
                                <Setter TargetName="PropertyItem_Container" Property="Background" Value="#88ffb759"/>
                            </MultiDataTrigger>
                        </HierarchicalDataTemplate.Triggers>
                    </HierarchicalDataTemplate>
                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"
                      Color="LightBlue" />
                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}"
                      Color="Black" />
                    <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}"
                      Color="LightBlue" />
                    <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}"
                      Color="Black" />
                </controls:StretchingTreeView.Resources>
                <controls:StretchingTreeView.ItemContainerStyle>
                    <Style TargetType="{x:Type TreeViewItem}">
                        <Setter Property="IsSelected" Value="{Binding Path=IsSelected, Mode=TwoWay}" />
                        <Setter Property="IsExpanded" Value="{Binding Path=IsExpanded, Mode=TwoWay}" />
                    </Style>
                </controls:StretchingTreeView.ItemContainerStyle>
                <controls:StretchingTreeView.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Copy property" ToolTip="Copies the property, which can then be pasted (using the paste button) into another export in the same package" Command="{Binding CopyPropertyCommand}" SharedUI:Bindings.VisibilityToEnabled="True"/>
                        <MenuItem Header="Paste property" ToolTip="Pastes the currently copied property" Command="{Binding PastePropertyCommand}" SharedUI:Bindings.VisibilityToEnabled="True"/>
                        <MenuItem Header="Copy parsed value" ToolTip="Copies the parsed value to the clipboard" Command="{Binding CopyValueCommand}" SharedUI:Bindings.VisibilityToEnabled="True"/>

                        <MenuItem Header="Sort children properties alphabetically" ToolTip="Sorts properties alphabetically. This is a cosmetic only change." Command="{Binding SortChildrenCommand}" SharedUI:Bindings.VisibilityToEnabled="True"/>
                        <MenuItem Header="Array sorting: By ascending parsed value" ToolTip="Sorts an array property by its parsed value, in ascending order." Command="{Binding SortParsedArrayAscendingCommand}" SharedUI:Bindings.VisibilityToEnabled="True"/>
                        <MenuItem Header="Array sorting: By descending parsed value" ToolTip="Sorts an array property by its parsed value, in descending order." Command="{Binding SortParsedArrayDescendingCommand}" SharedUI:Bindings.VisibilityToEnabled="True"/>
                        <MenuItem Header="Array sorting: By ascending value" ToolTip="Sorts an array property by its value, in ascending order." Command="{Binding SortValueArrayAscendingCommand}" SharedUI:Bindings.VisibilityToEnabled="True"/>
                        <MenuItem Header="Array sorting: By descending value" ToolTip="Sorts an array property by its value, in descending order." Command="{Binding SortValueArrayDescendingCommand}" SharedUI:Bindings.VisibilityToEnabled="True"/>
                        <MenuItem Header="Clear Array" ToolTip="Removes all values from the array." Command="{Binding ClearArrayCommand}" SharedUI:Bindings.VisibilityToEnabled="True"/>

                        <MenuItem Header="View referenced object in pop out Properties window" ToolTip="Opens a new Properties window displaying the referenced object value" Command="{Binding PopoutInterpreterForObjectValueCommand}" SharedUI:Bindings.VisibilityToEnabled="True"/>
                        <MenuItem Header="Open in Package Editor (this instance)" ToolTip="Navigates this package editor to this object" Command="{Binding NavigateToEntryCommandInternal}" SharedUI:Bindings.VisibilityToEnabled="True"/>
                        <MenuItem Header="Open in new Package Editor" ToolTip="Opens a new Package Editor to this object" Command="{Binding OpenInPackageEditorCommand}" SharedUI:Bindings.VisibilityToEnabled="True">
                            <MenuItem.Icon>
                                <Image Source="/Tools/Icons/packageeditorwpf_256x256.ico" Width="64"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="Attempt to find source of this import" ToolTip="Attempts to find the likely source of this import. Note that due to how unreal engine handles memory this may not be the one used." Command="{Binding AttemptOpenImportDefinitionCommand}" SharedUI:Bindings.VisibilityToEnabled="True">
                            <MenuItem.Icon>
                                <Image Source="/Tools/Icons/packageeditorwpf_256x256.ico" Width="64"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="Open in Meshplorer" ToolTip="Opens the referenced export in Meshplorer" Command="{Binding OpenInMeshplorerCommand}" SharedUI:Bindings.VisibilityToEnabled="True">

                            <MenuItem.Icon>
                                <Image Source="/Tools/Icons/meshplorer_256x256.ico" Width="64"/>
                            </MenuItem.Icon>
                        </MenuItem>

                        <MenuItem Header="Expand children" ToolTip="Expands all children of this property" Command="{Binding ExpandChildrenCommand}" SharedUI:Bindings.VisibilityToEnabled="True"/>
                        <MenuItem Header="Collapse children" ToolTip="Collapses all children of this property" Command="{Binding CollapseChildrenCommand}" SharedUI:Bindings.VisibilityToEnabled="True"/>

                        <MenuItem Header="Add missing properties" ToolTip="Add all properties that this struct can have" Command="{Binding AddPropertiesToStructCommand}" SharedUI:Bindings.VisibilityToEnabled="True"/>
                        <MenuItem Header="Generate new GUID" ToolTip="Generate a new GUID" Command="{Binding GenerateGUIDCommand}" SharedUI:Bindings.VisibilityToEnabled="True"/>
                        <MenuItem Header="Copy property name" ToolTip="Copies the name of the property to the clipboard" Command="{Binding CopyPropNameCommand}" SharedUI:Bindings.VisibilityToEnabled="True"/>
                        <MenuItem Header="Copy unrealscript value (for mergemods)" ToolTip="Copies the value of this property as an unrealscript literal" Command="{Binding CopyUnrealScriptPropValueCommand}" SharedUI:Bindings.VisibilityToEnabled="True"/>
                        <!--<MenuItem Header="Order array...">
                            <MenuItem Header="By value" ToolTip="Remove this property from this export" Command="{Binding RemovePropertyCommand}" SharedUI:Bindings.VisibilityToEnabled="True"/>


                        </MenuItem>-->
                        <MenuItem Header="Remove property" ToolTip="Remove this property from this export" Command="{Binding RemovePropertyCommand}" SharedUI:Bindings.VisibilityToEnabled="True"/>
                    </ContextMenu>
                </controls:StretchingTreeView.ContextMenu>
                <b:Interaction.Behaviors>
                    <peregrineTreeView:TreeViewHelper BoundSelectedItem="{Binding SelectedItem}" />
                </b:Interaction.Behaviors>
            </controls:StretchingTreeView>
        </Grid>
    </DockPanel>
</global:ExportLoaderControl>
