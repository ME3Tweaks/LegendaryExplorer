<misc:NotifyPropertyChangedControlBase x:Class="LegendaryExplorer.Tools.PlotEditor.StateEventMapView"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:system="clr-namespace:System;assembly=mscorlib"
	xmlns:stateEventMap="clr-namespace:Gammtek.Conduit.MassEffect3.SFXGame.StateEventMap"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:plotEditor="clr-namespace:LegendaryExplorer.Tools.PlotEditor"
    xmlns:misc="clr-namespace:LegendaryExplorer.Misc"
    xmlns:converters="clr-namespace:LegendaryExplorer.SharedUI.Converters"
    mc:Ignorable="d"
	DataContext="{Binding RelativeSource={RelativeSource Self}}"
	d:DesignHeight="600" d:DesignWidth="800">
	<!-- UserControl Resources -->
	<UserControl.Resources>
        <converters:NullVisibilityConverter x:Key="NullVisibilityConverter"/>
        <plotEditor:NameConverter x:Key="NameConverter" />
        <plotEditor:PlotPathConverter x:Key="PlotPathConverter" />
        <Style TargetType="{x:Type ListBox}" x:Key="ListBoxStyle">
			<Style.Triggers>
				<Trigger Property="HasItems" Value="True">
					<Setter Property="SelectedIndex" Value="0" />
				</Trigger>
				<Trigger Property="HasItems" Value="False">
					<Setter Property="SelectedIndex" Value="-1" />
				</Trigger>
			</Style.Triggers>
		</Style>
	</UserControl.Resources>

	<!-- Content -->
	<Grid>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="400" />
            <ColumnDefinition Width="5" />
			<ColumnDefinition Width="*" />
		</Grid.ColumnDefinitions>
		<Grid.RowDefinitions>
			<RowDefinition Height="*" />
			<RowDefinition Height="Auto" />
		</Grid.RowDefinitions>

		<!-- State Event Map ListBox -->
		<ListBox x:Name="StateEventMapListBox" Grid.Column="0" Grid.Row="0" Style="{DynamicResource ListBoxStyle}"
			ItemsSource="{Binding StateEvents, NotifyOnTargetUpdated=True}" SelectedItem="{Binding SelectedStateEvent, Mode=TwoWay}">
			<!-- Resources -->
            <ListBox.ItemTemplate>
                <!--<DataTemplate DataType="{x:Type stateEventMap:BioStateEvent}">-->
                <DataTemplate>
                    <StackPanel HorizontalAlignment="Left">
                        <TextBlock Text="{Binding Key, StringFormat='State Event: \{0\}'}" />
                        <TextBlock Text="{Binding Value.PlotPath}" TextWrapping="Wrap" FontSize="10" Visibility="{Binding Value.PlotPath, Converter={StaticResource NullVisibilityConverter}}"/>
                        <StackPanel.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Change Id" Click="ChangeStateEventId_Click"/>
                                <MenuItem Header="Copy" Click="CopyStateEvent_Click"/>
                                <MenuItem Header="Remove" Click="RemoveStateEvent_Click"/>
                            </ContextMenu>
                        </StackPanel.ContextMenu>
                    </StackPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>

		<!-- State Event Map Buttons -->
		<Grid Grid.Column="0" Grid.Row="1" Margin="0,5,0,0">
			<!-- Grid Definitions -->
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="5" />
				<ColumnDefinition Width="*" />
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto" />
			</Grid.RowDefinitions>

			<!-- Grid Content -->
			<Button Grid.Column="0" Grid.Row="0" Content="Add" Click="AddStateEvent_Click"/>

			<Button Grid.Column="2" Grid.Row="0" Content="Remove" Click="RemoveStateEvent_Click"/>
		</Grid>
        <GridSplitter Grid.Column="1"
                      Margin="-3,0"
                      BorderThickness="3,0"
                      BorderBrush="Transparent"
                      HorizontalAlignment="Stretch" />
		<!-- State Event Map Entry Grid -->
		<Grid x:Name="StateEventMapEntryGrid" Grid.Column="2" Grid.Row="0" Grid.RowSpan="2" Margin="0,0,0,0">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*" />
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto" />
				<RowDefinition Height="*" />
			</Grid.RowDefinitions>

			<!-- State Event Properties -->
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="*" />
				</Grid.ColumnDefinitions>
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto" />
				</Grid.RowDefinitions>

				<Label Grid.ColumnSpan="2"
					Content="State Event Properties:" />
			</Grid>

			<!-- State Event Map State Event -->
			<Grid Grid.Column="0" Grid.Row="1">
				<!-- Column / Row Definitions -->
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="*" />
				</Grid.ColumnDefinitions>
				<Grid.RowDefinitions>
					<RowDefinition Height="*" />
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" />
				</Grid.RowDefinitions>

				<!-- State Event Elements ListBox -->
				<ListBox x:Name="StateEventElementsListBox" Width="150" Style="{DynamicResource ListBoxStyle}"
					ItemsSource="{Binding SelectedStateEvent.Value.Elements, NotifyOnTargetUpdated=True}"
					SelectedItem="{Binding SelectedStateEventElement, Mode=TwoWay}">
					<!-- Resources -->
					<ListBox.Resources>
						<DataTemplate DataType="{x:Type stateEventMap:BioStateEventElementBool}">
                            <TextBlock Text="{Binding GlobalBool, StringFormat='Bool: \{0\}'}" />
						</DataTemplate>
						<DataTemplate DataType="{x:Type stateEventMap:BioStateEventElementConsequence}">
							<TextBlock Text="Consequence" />
						</DataTemplate>
						<DataTemplate DataType="{x:Type stateEventMap:BioStateEventElementFloat}">
                            <TextBlock Text="{Binding GlobalFloat, StringFormat='Float: \{0\}'}" />
						</DataTemplate>
						<DataTemplate DataType="{x:Type stateEventMap:BioStateEventElementFunction}">
							<TextBlock Text="Function" />
						</DataTemplate>
						<DataTemplate DataType="{x:Type stateEventMap:BioStateEventElementInt}">
                            <TextBlock Text="{Binding GlobalInt, StringFormat='Int: \{0\}'}" />
						</DataTemplate>
						<DataTemplate DataType="{x:Type stateEventMap:BioStateEventElementLocalBool}">
							<TextBlock Text="Local Bool" />
						</DataTemplate>
						<DataTemplate DataType="{x:Type stateEventMap:BioStateEventElementLocalFloat}">
							<TextBlock Text="Local Float" />
						</DataTemplate>
						<DataTemplate DataType="{x:Type stateEventMap:BioStateEventElementLocalInt}">
							<TextBlock Text="Local Int" />
						</DataTemplate>
						<DataTemplate DataType="{x:Type stateEventMap:BioStateEventElementSubstate}">
							<TextBlock Text="Substate" />
						</DataTemplate>
					</ListBox.Resources>

                    <ListBox.ItemContainerStyle>
                        <Style TargetType="ListBoxItem">
                            <Setter Property="Tag" Value="{Binding DataContext, ElementName=StateEventElementsListBox}" />
                            <Setter Property="ContextMenu">
                                <Setter.Value>
                                    <ContextMenu>
                                        <MenuItem Header="Copy">
                                            <MenuItem.Style>
                                                <Style TargetType="MenuItem">
                                                    <EventSetter Event="Click" Handler="CopyStateEventElement_Click"/>
                                                </Style>
                                            </MenuItem.Style>
                                        </MenuItem>
                                        <MenuItem Header="Remove">
                                            <MenuItem.Style>
                                                <Style TargetType="MenuItem">
                                                    <EventSetter Event="Click" Handler="RemoveStateEventElement_Click"/>
                                                </Style>
                                            </MenuItem.Style>
                                        </MenuItem>
                                    </ContextMenu>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListBox.ItemContainerStyle>
                </ListBox>

				<!-- New State Event Element ComboBox -->
				<ComboBox x:Name="NewStateEventElementComboBox" Grid.Column="0" Grid.Row="1" Margin="0,5,0,0"
					Tag="{Binding SelectedItem.Tag, RelativeSource={RelativeSource Self}}">
					<ComboBoxItem Content="Bool" Tag="{x:Static stateEventMap:BioStateEventElementType.Bool}" IsSelected="True" />
					<ComboBoxItem Content="Consequence" Tag="{x:Static stateEventMap:BioStateEventElementType.Consequence}" />
					<ComboBoxItem Content="Float" Tag="{x:Static stateEventMap:BioStateEventElementType.Float}" />
					<ComboBoxItem Content="Function" Tag="{x:Static stateEventMap:BioStateEventElementType.Function}" />
					<ComboBoxItem Content="Int" Tag="{x:Static stateEventMap:BioStateEventElementType.Int}" />
					<ComboBoxItem Content="Local Bool" Tag="{x:Static stateEventMap:BioStateEventElementType.LocalBool}" />
					<ComboBoxItem Content="Local Float" Tag="{x:Static stateEventMap:BioStateEventElementType.LocalFloat}" />
					<ComboBoxItem Content="Local Int" Tag="{x:Static stateEventMap:BioStateEventElementType.LocalInt}" />
					<ComboBoxItem Content="Substate" Tag="{x:Static stateEventMap:BioStateEventElementType.Substate}" />
				</ComboBox>

				<!-- State Event Element Buttons -->
				<Grid Grid.Column="0" Grid.Row="2" Margin="0,5,0,0">
					<!-- Grid Definitions -->
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="*" />
						<ColumnDefinition Width="5" />
						<ColumnDefinition Width="*" />
					</Grid.ColumnDefinitions>
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto" />
					</Grid.RowDefinitions>

					<!-- Grid Content -->
					<Button Grid.Column="0" Grid.Row="0" Content="Add" Click="AddStateEventElement_Click" />

					<Button Grid.Column="2" Grid.Row="0" Content="Remove" Click="RemoveStateEventElement_Click"/>
				</Grid>
                
                <!-- Selected State Event Element Detail-->
                <ContentControl x:Name="SelectedStateEventElementContent" Grid.Column="1" Grid.Row="0" Grid.RowSpan="3" Margin="5,0,5,0" BorderThickness="0"
                                Content="{Binding SelectedStateEventElement}">
                    <ContentControl.Resources>
                        <!-- Bool Event -->
                        <DataTemplate DataType="{x:Type stateEventMap:BioStateEventElementBool}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <!-- Global Bool -->
                                <Label Grid.Column="0" Grid.Row="0"
								Content="Global Bool"
								HorizontalAlignment="Left" Margin="0,5" VerticalAlignment="Center" />

                                <xctk:IntegerUpDown Grid.Column="1" Grid.Row="0"
								Text="{Binding Path=GlobalBool, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
								HorizontalAlignment="Left" Margin="5,5" Minimum="0" VerticalAlignment="Center" Width="150" />

                                <TextBlock Grid.Column="2" Grid.Row="0" TextAlignment="Left" TextWrapping="Wrap" VerticalAlignment="Center" Padding="3,0" MaxWidth="400">
                                    <TextBlock.Text>
                                        <MultiBinding Converter="{StaticResource PlotPathConverter}" ConverterParameter="bool">
                                            <Binding Path="DataContext.package.Game" ElementName="SelectedStateEventElementContent"/>
                                            <Binding Path="GlobalBool"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>

                                <!-- New State -->
                                <Label Grid.Column="0" Grid.Row="1"
								Content="New Value"
								HorizontalAlignment="Left" Margin="0,5" VerticalAlignment="Center" />

                                <ComboBox Grid.Column="1" Grid.Row="1"
								SelectedIndex="{Binding Path=NewState, 
									Mode=TwoWay, Converter={plotEditor:TypeConverter system:Boolean, system:Int32}}"
								HorizontalAlignment="Left" Margin="5,5" VerticalAlignment="Center" Width="150">
                                    <ComboBoxItem Content="False" />
                                    <ComboBoxItem Content="True" />
                                </ComboBox>

                                <!-- Use Param -->
                                <Label Grid.Column="0" Grid.Row="2"
								Content="Use Param"
								HorizontalAlignment="Left" Margin="0,5" VerticalAlignment="Center" />

                                <CheckBox Grid.Column="1" Grid.Row="2"
								IsChecked="{Binding Path=UseParam, Mode=TwoWay}"
								HorizontalAlignment="Left" Margin="5,5" VerticalAlignment="Center" Width="150" />

                                <!-- Instance Version -->
                                <Label Grid.Column="0" Grid.Row="3"
								Content="Instance Version"
								HorizontalAlignment="Left" Margin="0,5" VerticalAlignment="Center" />

                                <xctk:IntegerUpDown Grid.Column="1" Grid.Row="3"
								Text="{Binding Path=InstanceVersion, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
								HorizontalAlignment="Left" Margin="5,5" VerticalAlignment="Center" Width="150" />
                            </Grid>
                        </DataTemplate>

                        <!-- Consequence Event -->
                        <DataTemplate DataType="{x:Type stateEventMap:BioStateEventElementConsequence}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <!-- Consequence -->
                                <Label Grid.Column="0" Grid.Row="0"
								Content="Consequence" Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

                                <xctk:IntegerUpDown Grid.Column="1" Grid.Row="0"
								Text="{Binding Path=Consequence, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
								Width="150" Margin="5,5" Minimum="0" HorizontalAlignment="Left" VerticalAlignment="Center" />

                                <!-- Instance Version -->
                                <Label Grid.Column="0" Grid.Row="1"
								Content="Instance Version" Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

                                <xctk:IntegerUpDown Grid.Column="1" Grid.Row="1"
								Text="{Binding Path=InstanceVersion, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
								Width="150" Margin="5,5" HorizontalAlignment="Left" VerticalAlignment="Center" />
                            </Grid>
                        </DataTemplate>

                        <!-- Float Event -->
                        <DataTemplate DataType="{x:Type stateEventMap:BioStateEventElementFloat}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <!---->
                                <Label Grid.Column="0" Grid.Row="0"
								Content="Global Float" Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

                                <xctk:IntegerUpDown Grid.Column="1" Grid.Row="0"
								Text="{Binding Path=GlobalFloat, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
								Width="150" Margin="5,5" Minimum="0" HorizontalAlignment="Left" VerticalAlignment="Center" />

                                <TextBlock Grid.Column="2" Grid.Row="0" TextAlignment="Left" TextWrapping="Wrap" VerticalAlignment="Center" Padding="3,0">
                                    <TextBlock.Text>
                                        <MultiBinding Converter="{StaticResource PlotPathConverter}" ConverterParameter="float">
                                            <Binding Path="DataContext.package.Game" ElementName="SelectedStateEventElementContent"/>
                                            <Binding Path="GlobalFloat"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                                
                                <!---->
                                <Label Grid.Column="0" Grid.Row="1"
								Content="New Value" Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

                                <xctk:SingleUpDown Grid.Column="1" Grid.Row="1"
								Text="{Binding Path=NewValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="150" Margin="5,5"
								HorizontalAlignment="Left" VerticalAlignment="Center" ParsingNumberStyle="Float" />

                                <!---->
                                <Label Grid.Column="0" Grid.Row="2"
								Content="Increment" Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

                                <CheckBox Grid.Column="1" Grid.Row="2"
								IsChecked="{Binding Path=Increment, Mode=TwoWay}" Width="150"
								Margin="5,5"
								HorizontalAlignment="Left" VerticalAlignment="Center" />

                                <!---->
                                <Label Grid.Column="0" Grid.Row="3"
								Content="Use Param" Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

                                <CheckBox Grid.Column="1" Grid.Row="3"
								IsChecked="{Binding Path=UseParam, Mode=TwoWay}" Width="150" Margin="5,5"
								HorizontalAlignment="Left" VerticalAlignment="Center" />

                                <!---->
                                <Label Grid.Column="0" Grid.Row="4"
								Content="Instance Version" Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

                                <xctk:IntegerUpDown Grid.Column="1" Grid.Row="4"
								Text="{Binding Path=InstanceVersion, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="150"
								Margin="5,5"
								HorizontalAlignment="Left" VerticalAlignment="Center" />
                            </Grid>
                        </DataTemplate>

                        <!-- Function Event -->
                        <DataTemplate DataType="{x:Type stateEventMap:BioStateEventElementFunction}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <!-- Function Package Name -->
                                <Label Grid.Column="0" Grid.Row="0"
								Content="Function Package (Index)" Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

                                <xctk:IntegerUpDown Grid.Column="1" Grid.Row="0"
								Text="{Binding Path=FunctionPackageName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="150"
								Margin="5,5" Minimum="0" Maximum="{Binding DataContext.package.NameCount, ElementName=SelectedStateEventElementContent}"
								HorizontalAlignment="Left" VerticalAlignment="Center" />

                                <TextBlock Grid.Column="2" Grid.Row="0" TextAlignment="Left" TextWrapping="Wrap" VerticalAlignment="Center" Padding="3,0">
                                    <TextBlock.Text>
                                        <MultiBinding Converter="{StaticResource NameConverter}">
                                            <Binding Path="DataContext.package" ElementName="SelectedStateEventElementContent"/>
                                            <Binding Path="FunctionPackageName"/>
                                            <Binding Path="FunctionPackageNameFlags" />
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                                
                                <!-- Function Class Name -->
                                <Label Grid.Column="0" Grid.Row="1"
								Content="Function Class (Index)" Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

                                <xctk:IntegerUpDown Grid.Column="1" Grid.Row="1"
								Text="{Binding Path=FunctionClassName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="150"
								Margin="5,5" Minimum="0" Maximum="{Binding DataContext.package.NameCount, ElementName=SelectedStateEventElementContent}"
								HorizontalAlignment="Left" VerticalAlignment="Center" />

                                <TextBlock Grid.Column="2" Grid.Row="1" TextAlignment="Left" TextWrapping="Wrap" VerticalAlignment="Center" Padding="3,0">
                                    <TextBlock.Text>
                                        <MultiBinding Converter="{StaticResource NameConverter}">
                                            <Binding Path="DataContext.package" ElementName="SelectedStateEventElementContent"/>
                                            <Binding Path="FunctionClassName"/>
                                            <Binding Path="FunctionClassNameFlags" />
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                                         
                                <!-- Function Name -->
                                <Label Grid.Column="0" Grid.Row="2"
								Content="Function Name (Index)" Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

                                <xctk:IntegerUpDown Grid.Column="1" Grid.Row="2"
								Text="{Binding Path=FunctionName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="150"
								Margin="5,5" Minimum="0" Maximum="{Binding DataContext.package.NameCount, ElementName=SelectedStateEventElementContent}"
								HorizontalAlignment="Left" VerticalAlignment="Center" />

                                <TextBlock Grid.Column="2" Grid.Row="2" TextAlignment="Left" TextWrapping="Wrap" VerticalAlignment="Center" Padding="3,0">
                                    <TextBlock.Text>
                                        <MultiBinding Converter="{StaticResource NameConverter}">
                                            <Binding Path="DataContext.package" ElementName="SelectedStateEventElementContent"/>
                                            <Binding Path="FunctionName"/>
                                            <Binding Path="FunctionNameFlags" />
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                                
                                <!-- Function Parameter -->
                                <Label Grid.Column="0" Grid.Row="3"
								Content="Parameter" Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

                                <xctk:IntegerUpDown Grid.Column="1" Grid.Row="3"
								Text="{Binding Path=Parameter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="150" Margin="5,5"
								HorizontalAlignment="Left" VerticalAlignment="Center" />

                                <!-- Instance Version -->
                                <Label Grid.Column="0" Grid.Row="4"
								Content="Instance Version" Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

                                <xctk:IntegerUpDown Grid.Column="1" Grid.Row="4"
								Text="{Binding Path=InstanceVersion, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="150"
								Margin="5,5"
								HorizontalAlignment="Left" VerticalAlignment="Center" />
                            </Grid>
                        </DataTemplate>

                        <!-- Int Event -->
                        <DataTemplate DataType="{x:Type stateEventMap:BioStateEventElementInt}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <!---->
                                <Label Grid.Column="0" Grid.Row="0"
								Content="Global Int" Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

                                <xctk:IntegerUpDown Grid.Column="1" Grid.Row="0"
								Text="{Binding Path=GlobalInt, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="150" Margin="5,5"
								Minimum="0"
								HorizontalAlignment="Left" VerticalAlignment="Center" />

                                <TextBlock Grid.Column="2" Grid.Row="0" TextAlignment="Left" TextWrapping="Wrap" VerticalAlignment="Center" Padding="3,0">
                                    <TextBlock.Text>
                                        <MultiBinding Converter="{StaticResource PlotPathConverter}" ConverterParameter="int">
                                            <Binding Path="DataContext.package.Game" ElementName="SelectedStateEventElementContent"/>
                                            <Binding Path="GlobalInt"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>

                                <!---->
                                <Label Grid.Column="0" Grid.Row="1"
								Content="New Value" Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

                                <xctk:IntegerUpDown Grid.Column="1" Grid.Row="1"
								Text="{Binding Path=NewValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="150" Margin="5,5"
								HorizontalAlignment="Left" VerticalAlignment="Center" />

                                <!---->
                                <Label Grid.Column="0" Grid.Row="2"
								Content="Increment" Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

                                <CheckBox Grid.Column="1" Grid.Row="2"
								IsChecked="{Binding Path=Increment, Mode=TwoWay}" Width="150" Margin="5,5"
								HorizontalAlignment="Left" VerticalAlignment="Center" />

                                <!---->
                                <Label Grid.Column="0" Grid.Row="3"
								Content="Use Param" Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

                                <CheckBox Grid.Column="1" Grid.Row="3"
								IsChecked="{Binding Path=UseParam, Mode=TwoWay}" Width="150" Margin="5,5"
								HorizontalAlignment="Left" VerticalAlignment="Center" />

                                <!---->
                                <Label Grid.Column="0" Grid.Row="4"
								Content="Instance Version" Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

                                <xctk:IntegerUpDown Grid.Column="1" Grid.Row="4"
								Text="{Binding Path=InstanceVersion, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="150" Margin="5,5"
								HorizontalAlignment="Left" VerticalAlignment="Center" />
                            </Grid>
                        </DataTemplate>

                        <!-- Local Bool Event -->
                        <DataTemplate DataType="{x:Type stateEventMap:BioStateEventElementLocalBool}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <!---->
                                <Label Grid.Column="0" Grid.Row="0"
								Content="Function Name (Index)" Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

                                <xctk:IntegerUpDown Grid.Column="1" Grid.Row="0"
								Text="{Binding Path=FunctionName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="150"
								Margin="5,5" Minimum="0"
								HorizontalAlignment="Left" VerticalAlignment="Center" />

                                <!---->
                                <Label Grid.Column="0" Grid.Row="1"
								Content="New Value" Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

                                <ComboBox Grid.Column="1" Grid.Row="1"
								SelectedIndex="{Binding Path=NewValue, Mode=TwoWay, Converter={plotEditor:TypeConverter system:Boolean, system:Int32}}"
								Width="150" Margin="5,5" HorizontalAlignment="Left" VerticalAlignment="Center">

                                    <ComboBoxItem Content="False" />
                                    <ComboBoxItem Content="True" />
                                </ComboBox>

                                <!---->
                                <Label Grid.Column="0" Grid.Row="2"
								Content="Object Tag (Index)" Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

                                <CheckBox Grid.Column="1" Grid.Row="2"
								IsChecked="{Binding Path=ObjectTag, Mode=TwoWay}" Width="150"
								Margin="5,5"
								HorizontalAlignment="Left" VerticalAlignment="Center" />

                                <!---->
                                <Label Grid.Column="0" Grid.Row="3"
								Content="Object Type (Index)" Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

                                <xctk:IntegerUpDown Grid.Column="1" Grid.Row="3"
								Text="{Binding Path=ObjectType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="150"
								Margin="5,5"
								HorizontalAlignment="Left" VerticalAlignment="Center" />

                                <!---->
                                <Label Grid.Column="0" Grid.Row="4"
								Content="Use Param" Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

                                <CheckBox Grid.Column="1" Grid.Row="4"
								IsChecked="{Binding Path=UseParam, Mode=TwoWay}" Width="150"
								Margin="5,5"
								HorizontalAlignment="Left" VerticalAlignment="Center" />

                                <!---->
                                <Label Grid.Column="0" Grid.Row="5"
								Content="Instance Version" Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

                                <xctk:IntegerUpDown Grid.Column="1" Grid.Row="5"
								Text="{Binding Path=InstanceVersion, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="150"
								Margin="5,5"
								HorizontalAlignment="Left" VerticalAlignment="Center" />
                            </Grid>
                        </DataTemplate>

                        <!-- Local Float Event -->
                        <DataTemplate DataType="{x:Type stateEventMap:BioStateEventElementLocalFloat}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <!---->
                                <Label Grid.Column="0" Grid.Row="0"
								Content="Function Name (Index)" Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

                                <xctk:IntegerUpDown Grid.Column="1" Grid.Row="0"
								Text="{Binding Path=FunctionName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="150"
								Margin="5,5" Minimum="0"
								HorizontalAlignment="Left" VerticalAlignment="Center" />

                                <!---->
                                <Label Grid.Column="0" Grid.Row="1"
								Content="New Value" Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

                                <xctk:SingleUpDown Grid.Column="1" Grid.Row="1"
								Text="{Binding Path=NewValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="150" Margin="5,5"
								HorizontalAlignment="Left" VerticalAlignment="Center" ParsingNumberStyle="Float" />

                                <!---->
                                <Label Grid.Column="0" Grid.Row="2"
								Content="Object Tag (Index)" Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

                                <CheckBox Grid.Column="1" Grid.Row="2"
								IsChecked="{Binding Path=ObjectTag, Mode=TwoWay}" Width="150"
								Margin="5,5"
								HorizontalAlignment="Left" VerticalAlignment="Center" />

                                <!---->
                                <Label Grid.Column="0" Grid.Row="3"
								Content="Object Type (Index)" Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

                                <xctk:IntegerUpDown Grid.Column="1" Grid.Row="3"
								Text="{Binding Path=ObjectType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="150"
								Margin="5,5"
								HorizontalAlignment="Left" VerticalAlignment="Center" />

                                <!---->
                                <Label Grid.Column="0" Grid.Row="4"
								Content="Use Param" Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

                                <CheckBox Grid.Column="1" Grid.Row="4"
								IsChecked="{Binding Path=UseParam, Mode=TwoWay}" Width="150"
								Margin="5,5"
								HorizontalAlignment="Left" VerticalAlignment="Center" />

                                <!---->
                                <Label Grid.Column="0" Grid.Row="5"
								Content="Instance Version" Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

                                <xctk:IntegerUpDown Grid.Column="1" Grid.Row="5"
								Text="{Binding Path=InstanceVersion, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="150"
								Margin="5,5"
								HorizontalAlignment="Left" VerticalAlignment="Center" />
                            </Grid>
                        </DataTemplate>

                        <!-- Local Int Event -->
                        <DataTemplate DataType="{x:Type stateEventMap:BioStateEventElementLocalInt}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <!---->
                                <Label Grid.Column="0" Grid.Row="0"
								Content="Function Name (Index)"
								Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

                                <xctk:IntegerUpDown Grid.Column="1" Grid.Row="0"
								Text="{Binding Path=FunctionName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
								Width="150" Margin="5,5" Minimum="0" HorizontalAlignment="Left" VerticalAlignment="Center" />

                                <!---->
                                <Label Grid.Column="0" Grid.Row="1"
								Content="New Value"
								Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

                                <xctk:IntegerUpDown Grid.Column="1" Grid.Row="1"
								Text="{Binding Path=NewValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
								Width="150" Margin="5,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

                                <!---->
                                <Label Grid.Column="0" Grid.Row="2"
								Content="Object Tag (Index)"
								Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

                                <CheckBox Grid.Column="1" Grid.Row="2"
								IsChecked="{Binding Path=ObjectTag, Mode=TwoWay}"
								Width="150" Margin="5,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

                                <!---->
                                <Label Grid.Column="0" Grid.Row="3"
								Content="Object Type (Index)"
								Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

                                <xctk:IntegerUpDown Grid.Column="1" Grid.Row="3"
								Text="{Binding Path=ObjectType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
								Width="150" Margin="5,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

                                <!---->
                                <Label Grid.Column="0" Grid.Row="4"
								Content="Use Param"
								Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

                                <CheckBox Grid.Column="1" Grid.Row="4"
								IsChecked="{Binding Path=UseParam, Mode=TwoWay}"
								Width="150" Margin="5,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

                                <!---->
                                <Label Grid.Column="0" Grid.Row="5"
								Content="Instance Version"
								Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

                                <xctk:IntegerUpDown Grid.Column="1" Grid.Row="5"
								Text="{Binding Path=InstanceVersion, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
								Width="150" Margin="5,5" HorizontalAlignment="Left" VerticalAlignment="Center" />
                            </Grid>
                        </DataTemplate>

                        <!-- Substate Event -->
                        <DataTemplate x:Name="SubstateEventDataTemplate"  DataType="{x:Type stateEventMap:BioStateEventElementSubstate}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <!-- Global Bool -->
                                <Label Grid.Column="0" Grid.Row="0"
								Content="Global Bool"
								Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

                                <xctk:IntegerUpDown Grid.Column="1" Grid.Row="0"
								Text="{Binding Path=GlobalBool, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
								Width="150" Margin="5,5" Minimum="0" HorizontalAlignment="Left" VerticalAlignment="Center" />

                                <TextBlock Grid.Column="2" Grid.Row="0" TextAlignment="Left" TextWrapping="Wrap" VerticalAlignment="Center" Padding="3,0">
                                    <TextBlock.Text>
                                        <MultiBinding Converter="{StaticResource PlotPathConverter}" ConverterParameter="bool">
                                            <Binding Path="DataContext.package.Game" ElementName="SelectedStateEventElementContent"/>
                                            <Binding Path="GlobalBool"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>

                                <!-- New State -->
                                <Label Grid.Column="0" Grid.Row="1"
								Content="New State"
								Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

                                <ComboBox Grid.Column="1" Grid.Row="1"
								SelectedIndex="{Binding Path=NewState, Mode=TwoWay, Converter={plotEditor:TypeConverter system:Boolean, system:Int32}}"
								Width="150" Margin="5,5" HorizontalAlignment="Left" VerticalAlignment="Center">

                                    <ComboBoxItem Content="False" />
                                    <ComboBoxItem Content="True" />
                                </ComboBox>

                                <!-- Parent Index -->
                                <Label Grid.Column="0" Grid.Row="2"
								Content="Parent Index"
								Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

                                <xctk:IntegerUpDown Grid.Column="1" Grid.Row="2"
								Text="{Binding Path=ParentIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
								Margin="5,5" Width="150" HorizontalAlignment="Left" VerticalAlignment="Center" />

                                <!-- Parent Type Or (Needs new name) -->
                                <Label Grid.Column="0" Grid.Row="3"
								Content="Parent Type Or"
								Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

                                <CheckBox Grid.Column="1" Grid.Row="3"
								IsChecked="{Binding Path=ParentTypeOr, Mode=TwoWay}"
								Margin="5,5" Width="150" HorizontalAlignment="Left" VerticalAlignment="Center" />

                                <!-- Sibling Indicies -->
                                <Label Grid.Column="0" Grid.Row="4"
								Content="Sibling Indicies"
								Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

                                <Grid Grid.Column="1" Grid.Row="4" Margin="0,5,0,0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>

                                    <ListBox x:Name="SubstateStateEventSiblingIndicesListBox" Grid.Column="0" Grid.Row="0"
									ItemsSource="{Binding Path=SiblingIndices}"
									Width="150" Height="60" Margin="5,5" HorizontalAlignment="Left" VerticalAlignment="Center"/>

                                    <Grid Grid.Column="0" Grid.Row="1" Width="150" Margin="5,5">
                                        <!-- Grid Definitions -->
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="5" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>

                                        <!-- Grid Content -->
                                        <Button Grid.Column="0" Grid.Row="0" Content="Add" Click="AddSubstateSiblingIndex_Click"/>

                                        <Button Grid.Column="2" Grid.Row="0" Content="Remove" Click="RemoveSubstateSiblingIndex_Click" Tag="{Binding ElementName=SubstateStateEventSiblingIndicesListBox, Path=SelectedIndex}">
                                            <Button.Style>
                                                <Style TargetType="Button">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding ElementName=SubstateStateEventSiblingIndicesListBox, Path=SelectedIndex}" Value="-1">
                                                            <Setter Property="IsEnabled" Value="False" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Button.Style>
                                        </Button>
                                    </Grid>
                                </Grid>

                                <!-- Use Param -->
                                <Label Grid.Column="0" Grid.Row="5"
								Content="Use Param"
								Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

                                <CheckBox Grid.Column="1" Grid.Row="5"
								IsChecked="{Binding Path=UseParam, Mode=TwoWay}"
								Margin="5,5" Width="150" HorizontalAlignment="Left" VerticalAlignment="Center" />

                                <!-- Instance Version -->
                                <Label Grid.Column="0" Grid.Row="6"
								Content="Instance Version"
								Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

                                <xctk:IntegerUpDown Grid.Column="1" Grid.Row="6"
								Text="{Binding Path=InstanceVersion, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
								Margin="5,5" Width="150" HorizontalAlignment="Left" VerticalAlignment="Center" />
                            </Grid>
                        </DataTemplate>
                    </ContentControl.Resources>
                </ContentControl>
            </Grid>
		</Grid>
	</Grid>
</misc:NotifyPropertyChangedControlBase>