<bases:WPFBase
        x:Class="LegendaryExplorer.DialogueEditor.DialogueEditorWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        xmlns:fa="http://schemas.fontawesome.com/icons/"
        xmlns:bases="clr-namespace:LegendaryExplorer.SharedUI.Bases"
        xmlns:converters="clr-namespace:LegendaryExplorer.SharedUI.Converters"
        xmlns:sharedToolControls="clr-namespace:LegendaryExplorer.UserControls.SharedToolControls"
        xmlns:dialogueEditorExperiments="clr-namespace:LegendaryExplorer.Tools.Dialogue_Editor.DialogueEditorExperiments"
        xmlns:exportLoaderControls="clr-namespace:LegendaryExplorer.UserControls.ExportLoaderControls"
        xmlns:dialogueEditor="clr-namespace:LegendaryExplorer.DialogueEditor"
        xmlns:sharedUi="clr-namespace:LegendaryExplorer.SharedUI"
        mc:Ignorable="d"
        Loaded="DialogueEditorWPF_Loaded"
        Closing="DialogueEditorWPF_Closing"
        Icon="pack://application:,,,/Tools/Icons/16x16/DialogueEditor_Icon_16.ico"
        Title="Dialogue Editor" Height="750" Width="1300" MinWidth="900" MinHeight="300"
        DataContext="{Binding RelativeSource={RelativeSource Self}}">
    <Window.Resources>
        <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <converters:NullEnabledConverter x:Key="NullEnabledConverter"/>
        <converters:NullVisibilityConverter x:Key="NullVisibilityConverter"/>
        <converters:GameTypeConverter x:Key="GameTypeConverter"/>
        <converters:BoolToIndexConverter x:Key="BoolToIndexConverter"/>
        <ContextMenu x:Key="startnodeContextMenu" Closed="ContextMenu_Closed">
            <MenuItem Header="Add new start node" Command="{Binding StartAddCommand}" CommandParameter="Add" ToolTip="Create a new start node"/>
            <MenuItem Header="Edit" Command="{Binding StartEditCommand}" CommandParameter="Edit" ToolTip="Edit which dialogue entry this node connects to."/>
            <MenuItem Header="Remove start node" Command="{Binding StartDeleteCommand}" ToolTip="Delete this start node"/>
        </ContextMenu>
        <ContextMenu x:Key="replynodeContextMenu" Closed="ContextMenu_Closed">
            <MenuItem Header="Edit Links" Name="replyLinkEditContextMenu" Command="{Binding NodeEditCommand}" CommandParameter="Reply" ToolTip="Edit Links order and details"/>
            <Separator />
            <MenuItem Header="Add Reply" Command="{Binding NodeAddCommand}" CommandParameter="AddReply" ToolTip="Create a new clean reply"/>
            <MenuItem Header="Clone Reply" Command="{Binding NodeAddCommand}" CommandParameter="CloneReply" ToolTip="Create a new reply as a duplicate of this one"/>
            <Separator />
            <MenuItem Header="Break Links" Name="breakLinksMenuItem">
                <MenuItem Header="Individual Links" Name="outputLinksMenuItem"></MenuItem>
                <MenuItem Header="Break All Links" Name="breakAllLinksMenuItem" Command="{Binding NodeDeleteAllLinksCommand}" IsEnabled="{Binding SelectedDialogueNode, Converter={StaticResource NullEnabledConverter}}"/>
            </MenuItem>
            <MenuItem Header="Remove from Dialogue" Command="{Binding NodeRemoveCommand}"/>
            <Separator/>
            <MenuItem Header="Copy Line to Clipboard" Command="{Binding CopyToClipboardCommand}" CommandParameter="Line"/>
        </ContextMenu>
        <ContextMenu x:Key="entrynodeContextMenu" Closed="ContextMenu_Closed">
            <MenuItem Header="Edit Links" Name="entryLinkEditContextMenu" Command="{Binding NodeEditCommand}" CommandParameter="Entry" ToolTip="Edit Links order and details"/>
            <Separator />
            <MenuItem Header="Add Entry" Command="{Binding NodeAddCommand}" CommandParameter="AddEntry" ToolTip="Create a new clean entry"/>
            <MenuItem Header="Clone Entry" Command="{Binding NodeAddCommand}" CommandParameter="CloneEntry" ToolTip="Create a new entry as a duplicate of this one"/>
            <Separator />
            <MenuItem Header="Break Links" Name="ebreakLinksMenuItem">
                <MenuItem Header="Individual Links" Name="eoutputLinksMenuItem"></MenuItem>
                <MenuItem Header="Break All Links" Name="ebreakAllLinksMenuItem" Command="{Binding NodeDeleteAllLinksCommand}" IsEnabled="{Binding SelectedDialogueNode, Converter={StaticResource NullEnabledConverter}}"/>
            </MenuItem>
            <MenuItem Header="Remove from Dialogue" Command="{Binding NodeRemoveCommand}"/>
            <Separator/>
            <MenuItem Header="Copy Line to Clipboard" Command="{Binding CopyToClipboardCommand}" CommandParameter="Line"/>
        </ContextMenu>
        <system:Boolean x:Key="True">True</system:Boolean>
    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Key="L" Modifiers="Control"  Command="{Binding AutoLayoutCommand}"/>
        <KeyBinding Key="O" Modifiers="Control" Command="{Binding OpenCommand}"/>
        <KeyBinding Key="S" Modifiers="Control" Command="{Binding SaveCommand}"/>
        <KeyBinding Key="S" Modifiers="Control+Shift" Command="{Binding SaveAsCommand}"/>
        <KeyBinding Key="G" Modifiers="Control" Command="{Binding GoToCommand}"/>
        <KeyBinding Key="C" Modifiers="Control+Shift" Command="{Binding RecenterCommand}"/>
        <KeyBinding Key="M" Modifiers="Control+Shift" Command="{Binding SaveViewCommand}"/>
        <KeyBinding Key="F" Modifiers="Control" Command="{Binding SearchCommand}"/>
        <KeyBinding Key="F5" Command="{Binding ForceRefreshCommand}"/>
    </Window.InputBindings>
    <!-- This windows has a BusyIndicator, it's just tucked at the bottom, inside the Grid. It needs to be that way to not cause problems with the Piccolo control -->
    <Grid>
        <DockPanel>
            <Menu DockPanel.Dock="Top" HorizontalAlignment="Stretch">
                <Menu.ItemsPanel>
                    <ItemsPanelTemplate>
                        <DockPanel HorizontalAlignment="Stretch" />
                    </ItemsPanelTemplate>
                </Menu.ItemsPanel>
                <MenuItem Header="File" Padding="4">
                    <MenuItem Header="_Open" Command="{Binding OpenCommand}" InputGestureText="Ctrl+O"
                              ToolTip="Open a package file" />
                    <MenuItem Header="_Save" Command="{Binding SaveCommand}" InputGestureText="Ctrl+S"
                              ToolTip="Save package file in-place"
                              IsEnabled="{Binding Pcc, Converter={StaticResource NullEnabledConverter}}" />
                    <MenuItem Header="Save as" Command="{Binding SaveAsCommand}" InputGestureText="Ctrl+Shift+S"
                              ToolTip="Save package file to another location"
                              IsEnabled="{Binding Pcc, Converter={StaticResource NullEnabledConverter}}" />
                    <MenuItem Header="Open in...">
                        <MenuItem Header="FaceFX Editor" Command="{Binding OpenInCommand}"
                                  CommandParameter="FaceFXEditor"
                                  IsEnabled="{Binding Pcc, Converter={StaticResource NullEnabledConverter}}">
                            <MenuItem.Icon>
                                <Image Source="{StaticResource iconFaceFXEditor16}" Width="64" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="Package Editor" Command="{Binding OpenInCommand}"
                                  CommandParameter="PackageEditor"
                                  IsEnabled="{Binding Pcc, Converter={StaticResource NullEnabledConverter}}">
                            <MenuItem.Icon>
                                <Image Source="{StaticResource iconPackageEditor16}" Width="64" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="Sequence Editor" Command="{Binding OpenInCommand}"
                                  CommandParameter="SequenceEditor"
                                  IsEnabled="{Binding Pcc, Converter={StaticResource NullEnabledConverter}}">
                            <MenuItem.Icon>
                                <Image Source="{StaticResource iconSequenceEditor16}" Width="64" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="Soundplorer" Command="{Binding OpenInCommand}"
                                  CommandParameter="SoundplorerWPF"
                                  IsEnabled="{Binding Pcc, Converter={StaticResource NullEnabledConverter}}">
                            <MenuItem.Icon>
                                <Image Source="{StaticResource iconSoundplorer16}" Width="64" />
                            </MenuItem.Icon>
                        </MenuItem>
                    </MenuItem>
                    <Separator />
                    <MenuItem Name="Recents_MenuItem" Header="Recent" IsEnabled="false" />
                </MenuItem>

                <MenuItem Header="Tools" Padding="4">
                    <MenuItem Header="Search" Command="{Binding SearchCommand}" InputGestureText="Ctrl+F"
                              ToolTip="Search by string or text" />
                    <Separator />
                    <MenuItem Header="Manage TLKs" Command="{Binding LoadTLKManagerCommand}" ToolTip="Load TLK Manager" />
                    <MenuItem Header="Force Refresh" Command="{Binding ForceRefreshCommand}" InputGestureText="F5"
                              ToolTip="Force full refresh of Dialogue" />
                    <MenuItem Header="Save Image" Command="{Binding SaveImageCommand}"
                              ToolTip="Save image of full Dialogue" />
                    <MenuItem Header="Test for looping paths" Command="{Binding TestPathsCommand}"
                              ToolTip="Test the dialogue for looping paths."
                              IsEnabled="{Binding SelectedConv, Converter={StaticResource NullEnabledConverter}}" />
                    <Separator />
                    <MenuItem Header="Add New Start" Command="{Binding StartAddCommand}" CommandParameter="Add"
                              ToolTip="Create a new start node"
                              IsEnabled="{Binding SelectedConv, Converter={StaticResource NullEnabledConverter}}" />
                    <MenuItem Header="Add New Entry" Command="{Binding NodeAddCommand}" CommandParameter="AddEntry"
                              ToolTip="Add new entry to this Dialogue"
                              IsEnabled="{Binding SelectedConv, Converter={StaticResource NullEnabledConverter}}" />
                    <MenuItem Header="Add New Reply" Command="{Binding NodeAddCommand}" CommandParameter="AddReply"
                              ToolTip="Add new reply to this Dialogue"
                              IsEnabled="{Binding SelectedConv, Converter={StaticResource NullEnabledConverter}}" />
                </MenuItem>

                <MenuItem Header="View Options" Padding="4">
                    <MenuItem Header="Adjust spoken line text size"
                              ToolTip="Adjust the size of the spoken line text beside the title box">
                        <MenuItem Name="Menu_LineSize_00" Header="Turned off" IsCheckable="True"
                                  Command="{Binding ChangeLineSizeCommand}" CommandParameter="00" />
                        <MenuItem Name="Menu_LineSize_10" Header="1.0 (default)" IsCheckable="True"
                                  Command="{Binding ChangeLineSizeCommand}" CommandParameter="10" />
                        <MenuItem Name="Menu_LineSize_15" Header="1.5" IsCheckable="True"
                                  Command="{Binding ChangeLineSizeCommand}" CommandParameter="15" />
                        <MenuItem Name="Menu_LineSize_20" Header="2.0" IsCheckable="True"
                                  Command="{Binding ChangeLineSizeCommand}" CommandParameter="20" />
                    </MenuItem>
                    <MenuItem Header="Adjust spacing" ToolTip="Adjust the spacing of the autolayout"
                              StaysOpenOnClick="True">
                        <TextBlock Text="Adjust Row Spacing: (default is 200)" />
                        <xctk:IntegerUpDown x:Name="RwSpce_Picker" Value="{Binding RowSpace}" Minimum="50"
                                            ToolTip="Adjust the size between rows (default is 200)" Increment="10"
                                            ValueChanged="Spacing_ValueChanged" HorizontalAlignment="Stretch" />
                        <TextBlock Text="Adjust Column Spacing: (default is 200)" />
                        <xctk:IntegerUpDown x:Name="CmSpce_Picker" Value="{Binding ColumnSpace}" Minimum="50"
                                            ToolTip="Adjust the size between columns (default is 200)" Increment="10"
                                            ValueChanged="Spacing_ValueChanged" HorizontalAlignment="Stretch" />
                        <TextBlock Text="Adjust Waterfall steepness: (default is 40)" />
                        <xctk:IntegerUpDown x:Name="WtSpce_Picker" Value="{Binding WaterfallSpace}" Minimum="0"
                                            ToolTip="Adjust the steepness of the decline in waterfall layout (default is 40)"
                                            Increment="10" ValueChanged="Spacing_ValueChanged"
                                            HorizontalAlignment="Stretch" />
                    </MenuItem>
                    <MenuItem Header="Adjust graph color settings">
                        <TextBlock Text="Spoken Text: " />
                        <xctk:ColorPicker Name="ClrPcker_Line" SelectedColorChanged="ChangeLineColor"
                                          HorizontalAlignment="Right" />
                        <Separator />
                        <TextBlock Text="Entry outline: " />
                        <xctk:ColorPicker Name="ClrPcker_EntryPen" SelectedColorChanged="ChangeLineColor"
                                          HorizontalAlignment="Stretch" />
                        <TextBlock Text="Entry Header: " />
                        <xctk:ColorPicker Name="ClrPcker_Entry" SelectedColorChanged="ChangeLineColor"
                                          HorizontalAlignment="Stretch" />
                        <TextBlock Text="Reply outline: " />
                        <xctk:ColorPicker Name="ClrPcker_ReplyPen" SelectedColorChanged="ChangeLineColor"
                                          HorizontalAlignment="Stretch" />
                        <TextBlock Text="Reply Header: " />
                        <xctk:ColorPicker Name="ClrPcker_Reply" SelectedColorChanged="ChangeLineColor"
                                          HorizontalAlignment="Stretch" />
                        <Separator />
                        <TextBlock Text="Paragon Interrupt: " ToolTip="Adjust the color of Paragon Interrupt" />
                        <xctk:ColorPicker Name="ClrPcker_ParaInt" SelectedColorChanged="ChangeLineColor"
                                          HorizontalAlignment="Stretch" ToolTip="Adjust the color of Paragon Interrupt" />
                        <TextBlock Text="Renegade Interrupt: " ToolTip="Adjust the color of Renegade Interrupt" />
                        <xctk:ColorPicker Name="ClrPcker_RenInt" SelectedColorChanged="ChangeLineColor"
                                          HorizontalAlignment="Stretch"
                                          ToolTip="Adjust the color of Renegade Interrupt" />
                        <TextBlock Text="Agree: " />
                        <xctk:ColorPicker Name="ClrPcker_Agree" SelectedColorChanged="ChangeLineColor"
                                          HorizontalAlignment="Stretch" />
                        <TextBlock Text="Disagree: " />
                        <xctk:ColorPicker Name="ClrPcker_Disagree" SelectedColorChanged="ChangeLineColor"
                                          HorizontalAlignment="Stretch" />
                        <TextBlock Text="Friendly response: " />
                        <xctk:ColorPicker Name="ClrPcker_Friendly" SelectedColorChanged="ChangeLineColor"
                                          HorizontalAlignment="Stretch" />
                        <TextBlock Text="Hostile response: " />
                        <xctk:ColorPicker Name="ClrPcker_Hostile" SelectedColorChanged="ChangeLineColor"
                                          HorizontalAlignment="Stretch" />
                    </MenuItem>
                    <MenuItem Header="Reset colors to default" Command="{Binding DefaultColorsCommand}" />
                    <MenuItem Name="HideEntryOutput_MenuItem" Header="Hide GUI choice text" IsCheckable="True"
                              Command="{Binding UpdateLayoutDefaultsCommand}" CommandParameter="Toggle_Output"
                              ToolTip="Hide the the dialogue wheel text on each entry output" />
                    <MenuItem Name="ShowLinesOnTop_MenuItem" Header="Show Line text above node" IsCheckable="True"
                              Command="{Binding UpdateLayoutDefaultsCommand}" CommandParameter="Toggle_LineAtTop"
                              ToolTip="Place line text above the node rather than right" />
                </MenuItem>
                <MenuItem Header="Layout" Padding="4">
                    <MenuItem Header="Save Current Layout" Command="{Binding SaveViewCommand}"
                              InputGestureText="Ctrl+Shift+M" ToolTip="Save the node layout"
                              IsEnabled="{Binding SelectedConv, Converter={StaticResource NullVisibilityConverter}}" />
                    <MenuItem Header="Re-Center view" Command="{Binding RecenterCommand}"
                              InputGestureText="Ctrl+Shift+C" ToolTip="Recenter to starting nodes"
                              IsEnabled="{Binding SelectedConv, Converter={StaticResource NullVisibilityConverter}}" />
                    <Separator />
                    <MenuItem Name="ManualSaveView_MenuItem" Header="Manual-Save Layouts"
                              Command="{Binding UpdateLayoutDefaultsCommand}" CommandParameter="Lay_Manual"
                              IsCheckable="True"
                              ToolTip="Layouts are saved manually, if no prior save it will default to autolayout" />
                    <MenuItem Name="AutoSaveView_MenuItem" Header="Auto-Save Layouts"
                              Command="{Binding UpdateLayoutDefaultsCommand}" CommandParameter="Lay_AutoSave"
                              IsCheckable="True"
                              ToolTip="Layouts are saved automatically, if no prior save it will default to autolayout" />
                    <MenuItem Name="AutoGenView_MenuItem" Header="Auto-Generate Layouts"
                              Command="{Binding UpdateLayoutDefaultsCommand}" CommandParameter="Lay_AutoGen"
                              IsCheckable="True" ToolTip="Layouts are never saved and always regenerated." />
                    <Separator />
                    <MenuItem Name="Column_MenuItem" Header="Default Auto Layout is Simple Column"
                              Command="{Binding UpdateLayoutDefaultsCommand}" CommandParameter="Auto_Column"
                              IsCheckable="True"
                              ToolTip="Default layout without an existing save will be in 3 simple columns" />
                    <MenuItem Name="AdvColumn_MenuItem" Header="Default Auto Layout is Complex Column"
                              Command="{Binding UpdateLayoutDefaultsCommand}" CommandParameter="Auto_AdvColumn"
                              IsCheckable="True"
                              ToolTip="Default layout without an existing save will be cascading columns" />
                    <MenuItem Name="Waterfall_MenuItem" Header="Default Auto Layout is Waterfall"
                              Command="{Binding UpdateLayoutDefaultsCommand}" CommandParameter="Auto_Waterfall"
                              IsCheckable="True"
                              ToolTip="Default layout without an existing save will be cascading branches" />
                    <Separator />
                    <MenuItem Header="Re-Run Auto Layout" Command="{Binding AutoLayoutCommand}"
                              InputGestureText="Ctrl+L" ToolTip="Re-run default autogenerated layout now" />
                </MenuItem>
                <dialogueEditorExperiments:DialogueExperimentsMenuControl x:Name="DialogueExperimentsMenu"  Visibility="{Binding ShowExperiments, Converter={StaticResource BoolToVisibilityConverter}}"/>
                <MenuItem HorizontalAlignment="Right">
                    <MenuItem.Header>
                        <ComboBox Name="GotoBox" Text="Go to: (Ctrl+G)" ItemsSource="{Binding CurrentObjects}"
                                  DisplayMemberPath="ListName" IsEditable="True" Width="320"
                                  SelectionChanged="GotoBox_SelectionChanged" ToolTip="Pick a Node to go to"
                                  IsEnabled="true" HorizontalAlignment="Right" HorizontalContentAlignment="Left"
                                  Visibility="{Binding SelectedConv, Converter={StaticResource NullVisibilityConverter}}">
                            <ComboBox.ItemContainerStyle>
                                <Style TargetType="ComboBoxItem">
                                    <Setter Property="Width" Value="300" />
                                </Style>
                            </ComboBox.ItemContainerStyle>
                        </ComboBox>
                    </MenuItem.Header>
                </MenuItem>
            </Menu>
            <StatusBar Height="23" DockPanel.Dock="Bottom">
                <sharedToolControls:StatusBarGameIDIndicator
                    Visibility="{Binding Pcc, Converter={StaticResource NullVisibilityConverter}}"
                    GameType="{Binding Pcc, Converter={StaticResource GameTypeConverter}}" Margin="0,-4" />
                <StatusBarItem>
                    <TextBlock Name="StatusBar_LeftMostText" Text="{Binding StatusText}" />
                </StatusBarItem>
                <StatusBarItem>
                    <TextBlock Name="StatusBar_OtherText" Text="" />
                </StatusBarItem>
                <StatusBarItem HorizontalAlignment="Right">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Name="StatusBar_RightSide_LastSaved"
                                   Text="{Binding Pcc.LastSaved, StringFormat='Last saved at {0}'}" Foreground="Gray" />
                    </StackPanel>
                </StatusBarItem>
            </StatusBar>

            <!-- Main Content panel-->
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="2*" />
                    <RowDefinition Height="5" />
                    <RowDefinition Height="1*" />
                    <RowDefinition Height="5" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="3*" />
                    <ColumnDefinition Width="5" />
                    <ColumnDefinition Width="0" Name="RightBarColumn" />
                </Grid.ColumnDefinitions>
                <!-- Right side panel - Convo/Speakers/Nodes -->
                <DockPanel Name="RightSide_Dock" LastChildFill="True" Grid.Column="2" Grid.Row="0"
                           Visibility="{Binding Pcc, Converter={StaticResource NullVisibilityConverter}}"
                           ScrollViewer.CanContentScroll="False">
                    <!--Stage Directions ME3 -->
                    <Expander Name="StageDirections_Expander" ExpandDirection="Up" IsExpanded="False"
                              Background="Orange" Padding="2" Panel.ZIndex="250" DockPanel.Dock="Bottom"
                              Visibility="Collapsed">
                        <Expander.Header>
                            <TextBlock Text="Stage Directions" VerticalAlignment="Center" Margin="0,0,4,0" />
                        </Expander.Header>
                        <DockPanel Background="White" Margin="0,3,4,3" LastChildFill="True">
                            <TextBlock DockPanel.Dock="Top" Text="Stage Directions" Margin="5,5,5,0" FontWeight="Bold"
                                       TextAlignment="Center" />
                            <TextBlock DockPanel.Dock="Top" Text="Add stage directions or notes" Foreground="Gray"
                                       FontSize="10" TextWrapping="Wrap" TextAlignment="Center" />
                            <ListBox Name="StageDirs_ListBox" DockPanel.Dock="Bottom"
                                     ItemsSource="{Binding Path=SelectedConv.StageDirections}"
                                     VerticalContentAlignment="Stretch" ScrollViewer.CanContentScroll="True"
                                     ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                     ScrollViewer.VerticalScrollBarVisibility="Visible"
                                     MouseDoubleClick="StageDirs_ListBox_OnMouseDoubleClick">
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <Grid HorizontalAlignment="Stretch">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>
                                            <StackPanel Orientation="Horizontal" Grid.Row="0">
                                                <TextBlock Text="{Binding StageStrRef}" FontWeight="DemiBold" />
                                                <TextBlock Text=" : " />
                                                <TextBlock Text="{Binding StageLine}" />
                                            </StackPanel>
                                            <TextBox Grid.Row="1"
                                                     Text="{Binding Direction, Mode=TwoWay, UpdateSourceTrigger=Explicit}"
                                                     TextWrapping="Wrap" HorizontalAlignment="Stretch"
                                                     KeyUp="StageDirections_TextChanged" />
                                        </Grid>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                                <ListBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="Go to node" Command="{Binding StageDirectionsModCommand}"
                                                  CommandParameter="Goto" />
                                        <MenuItem Header="Add" Command="{Binding StageDirectionsModCommand}"
                                                  CommandParameter="Add" />
                                        <MenuItem Header="Delete" Command="{Binding StageDirectionsModCommand}"
                                                  CommandParameter="Delete" />
                                    </ContextMenu>
                                </ListBox.ContextMenu>
                            </ListBox>
                        </DockPanel>
                    </Expander>
                    <!--Switchable Panels -->
                    <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
                        <StackPanel DockPanel.Dock="Top" ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                    ScrollViewer.VerticalScrollBarVisibility="Disabled">
                            <!--Convo Panel-->
                            <StackPanel Name="Convo_Panel" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                        Margin="2" Visibility="Collapsed"
                                        ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                                <DockPanel>
                                    <TextBlock Name="ConvoDet_Header" Text="Conversation Details"
                                               HorizontalAlignment="Left" FontWeight="Bold" FontSize="18"
                                               DockPanel.Dock="Top" />
                                    <DockPanel HorizontalAlignment="Stretch" DockPanel.Dock="Bottom">
                                        <TextBlock Text="Export:" HorizontalAlignment="Stretch" TextAlignment="Left"
                                                   VerticalAlignment="Center" FontWeight="Bold" FontSize="15"
                                                   DockPanel.Dock="Left" />
                                        <Button Name="OpenConvPackEd_Button" Command="{Binding OpenInCommand}"
                                                CommandParameter="PackEdConv" Padding="2"
                                                ToolTip="Open the conversation in Package Editor"
                                                DockPanel.Dock="Right">
                                            <Button.Content>
                                                <fa:ImageAwesome Icon="Solid_Cube" Width="16" Height="16"
                                                                 Foreground="DarkBlue" />
                                            </Button.Content>
                                        </Button>
                                        <TextBlock Name="Convo_UID" Text="{Binding Path=SelectedConv.ExportUID}"
                                                   VerticalAlignment="Center" TextAlignment="Right" FontWeight="Bold"
                                                   FontSize="20" Margin="6,0,10,0" />
                                    </DockPanel>
                                </DockPanel>
                                <TextBlock Name="Convo_Name" Text="{Binding Path=SelectedConv.ConvName}"
                                           HorizontalAlignment="Stretch" FontWeight="Bold" FontSize="20"
                                           TextWrapping="Wrap" TextAlignment="Left" Margin="2,4,2,4" />
                                <DockPanel HorizontalAlignment="Stretch">
                                    <TextBlock Name="LevelHeader" Text="Level:" HorizontalAlignment="Left"
                                               VerticalAlignment="Bottom"
                                               ToolTip="File with the Persistant level that uses the conversation"
                                               DockPanel.Dock="Left" FontWeight="Normal" FontSize="15" />
                                    <Grid DockPanel.Dock="Right" MaxWidth="50" VerticalAlignment="Bottom">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="25" />
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="25" />
                                            <ColumnDefinition Width="25" />
                                        </Grid.ColumnDefinitions>
                                        <Button Name="OpenLevelPackEd_Button" Grid.Column="0"
                                                Command="{Binding OpenInCommand}" CommandParameter="PackEdLvl"
                                                Padding="2" ToolTip="Open the Actor's level in Package Editor">
                                            <Button.Content>
                                                <fa:ImageAwesome Icon="Solid_Cube" Width="16" Height="16"
                                                                 Foreground="DarkBlue" />
                                            </Button.Content>
                                        </Button>
                                        <Button Name="OpenLevelSeqEd_Button" Grid.Column="1"
                                                Command="{Binding OpenInCommand}" CommandParameter="SeqEdLvl"
                                                Padding="3" ToolTip="Open the Actor's level in Sequence Editor">
                                            <Button.Content>
                                                <fa:ImageAwesome Icon="Solid_ProjectDiagram" Width="16" Height="16"
                                                                 Foreground="DarkBlue" />
                                            </Button.Content>
                                        </Button>
                                    </Grid>
                                    <TextBlock Text="" />
                                </DockPanel>
                                <TextBlock Name="Level_Textbox" Text="{Binding Level}" HorizontalAlignment="Left"
                                           VerticalAlignment="Bottom"
                                           ToolTip="File with the Persistant level that uses the conversation"
                                           FontSize="15" Margin="5" FontWeight="DemiBold" />
                                <DockPanel HorizontalAlignment="Stretch" Margin="0,5,0,0">
                                    <TextBlock Text="Dialogue Sequence:" Name="Data" VerticalAlignment="Bottom"
                                               HorizontalAlignment="Left" ToolTip="Sequence for this conversation."
                                               DockPanel.Dock="Left" FontWeight="Normal" FontSize="15" />
                                    <Button Name="OpenSeqEd_Button" Command="{Binding OpenInCommand}"
                                            CommandParameter="SeqEdNode" Padding="3" DockPanel.Dock="Right"
                                            ToolTip="Open this dialogue's sequence">
                                        <Button.Content>
                                            <fa:ImageAwesome Icon="Solid_ProjectDiagram" Width="16" Height="16"
                                                             Foreground="DarkBlue" />
                                        </Button.Content>
                                    </Button>
                                    <TextBlock Text="" FontSize="10" />
                                </DockPanel>
                                <DockPanel Margin="0,0,5,0">
                                    <TextBlock Name="SequenceUID_TextBox"
                                               Text="{Binding Path=SelectedConv.Sequence.UIndex}"
                                               HorizontalAlignment="Left" VerticalAlignment="Bottom"
                                               ToolTip="Main conversation sequence" FontSize="15" DockPanel.Dock="Left"
                                               Margin="3" FontWeight="DemiBold" />
                                    <TextBlock Name="Sequence_TextBox"
                                               Text="{Binding Path=SelectedConv.Sequence.ObjectName.Instanced}"
                                               HorizontalAlignment="Left" VerticalAlignment="Bottom"
                                               ToolTip="Main conversation sequence" FontSize="15" Margin="3"
                                               FontWeight="DemiBold" />
                                </DockPanel>
                                <DockPanel HorizontalAlignment="Stretch" Margin="0,5,0,0">
                                    <TextBlock Text="Wwisebank:" HorizontalAlignment="Left" VerticalAlignment="Bottom"
                                               ToolTip="Main conversation Wwisebank" DockPanel.Dock="Left"
                                               FontWeight="Normal" FontSize="15" />
                                    <Button Name="OpenWWbnk_Button" Padding="3" DockPanel.Dock="Right"
                                            Command="{Binding OpenInCommand}" CommandParameter="SoundP_Bank"
                                            ToolTip="Open In Sound Explorer">
                                        <Button.Content>
                                            <fa:ImageAwesome Icon="Solid_VolumeUp" Width="16" Height="16"
                                                             Foreground="DarkBlue" />
                                        </Button.Content>
                                    </Button>
                                    <TextBlock Text="" FontSize="10" />
                                </DockPanel>
                                <StackPanel Name="Wwisebank_Stack" Orientation="Horizontal" HorizontalAlignment="Left"
                                            VerticalAlignment="Top" ToolTip="Main conversation audiobank"
                                            Margin="0,0,5,0">
                                    <TextBlock Text="{Binding Path=SelectedConv.WwiseBank.UIndex}"
                                               HorizontalAlignment="Left" ToolTip="Main conversation audiobank"
                                               FontSize="15" Margin="3" FontWeight="DemiBold" />
                                    <TextBlock
                                        Text="{Binding Path=SelectedConv.WwiseBank.ObjectName.Instanced, TargetNullValue=None, FallbackValue=None}"
                                        HorizontalAlignment="Left" ToolTip="Main conversation audiobank" FontSize="15"
                                        Margin="3" FontWeight="DemiBold" />
                                </StackPanel>
                                <DockPanel HorizontalAlignment="Stretch" Margin="0,5,2,0">
                                    <TextBlock Text="Non-Speaker FaceFX:" HorizontalAlignment="Left"
                                               VerticalAlignment="Bottom"
                                               ToolTip="Conversation animations for non-speakers" DockPanel.Dock="Left"
                                               FontWeight="Normal" FontSize="15" />
                                    <Button Name="OpenFFX_Button" Padding="3" DockPanel.Dock="Right"
                                            Command="{Binding OpenInCommand}" CommandParameter="FaceFXNS"
                                            ToolTip="Open Non-speaker's AnimSet in FaceFX Editor">
                                        <Button.Content>
                                            <fa:ImageAwesome Icon="Solid_TheaterMasks" Width="16" Height="16"
                                                             Foreground="DarkBlue" />
                                        </Button.Content>
                                    </Button>
                                    <TextBlock Text="" />
                                </DockPanel>
                                <ComboBox Name="ComboBox_Conv_NSFFX" ItemsSource="{Binding Path=FFXAnimsets}"
                                          SelectedItem="{Binding Path=SelectedConv.NonSpkrFFX}"
                                          HorizontalAlignment="Stretch"
                                          ToolTip="Conversation animations for non-speakers" Margin="2,2,5,5"
                                          DropDownClosed="Convo_NSFFX_DropDownClosed">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="{Binding Path=ObjectName.Instanced}"
                                                           FontStretch="Condensed" />
                                            </StackPanel>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                                <Grid Margin="0,0,3,3">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="50*" />
                                        <ColumnDefinition Width="31" />
                                        <ColumnDefinition Width="31" />
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Text="Scripted Events:" HorizontalAlignment="Left"
                                               VerticalAlignment="Bottom"
                                               ToolTip="Scripted Events that can be called from lines to start new sequences."
                                               FontWeight="Normal" FontSize="15" />
                                    <Button Name="ScriptAddButton" Command="{Binding ScriptAddCommand}"
                                            CommandParameter="Add" Padding="3" Grid.Column="1" Margin="2"
                                            ToolTip="Add a new script">
                                        <Button.Content>
                                            <fa:ImageAwesome Icon="Solid_PlusCircle" Width="16" Height="16"
                                                             Foreground="DarkBlue" />
                                        </Button.Content>
                                    </Button>
                                    <Button Name="ScriptDeleteButton" Command="{Binding ScriptDeleteCommand}"
                                            Padding="3" Grid.Column="2" Margin="2" ToolTip="Delete selected script">
                                        <Button.Content>
                                            <fa:ImageAwesome Icon="Solid_MinusCircle" Width="16" Height="16"
                                                             Foreground="DarkBlue" />
                                        </Button.Content>
                                    </Button>
                                </Grid>
                                <ListView Name="Script_ListBox"
                                          ItemsSource="{Binding Path=SelectedConv.ScriptList, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                          ScrollViewer.VerticalScrollBarVisibility="Visible" MinHeight="30">
                                    <ListView.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Instanced}" />
                                        </DataTemplate>
                                    </ListView.ItemTemplate>
                                </ListView>
                            </StackPanel>
                            <!--Speaker Panel-->
                            <StackPanel Name="Speaker_Panel" HorizontalAlignment="Stretch" Margin="3"
                                        Visibility="Collapsed">
                                <TextBlock Text="Speaker Details" HorizontalAlignment="Left" VerticalAlignment="Center"
                                           FontWeight="Bold" FontSize="18" DockPanel.Dock="Left" />
                                <DockPanel HorizontalAlignment="Stretch">
                                    <TextBlock Name="Speaker_ID"
                                               Text="{Binding Path=SelectedSpeaker.SpeakerID, UpdateSourceTrigger=PropertyChanged}"
                                               HorizontalAlignment="Right" FontWeight="Bold" FontSize="18"
                                               DockPanel.Dock="Right" Padding="5" />
                                    <TextBlock Text="ID:" VerticalAlignment="Center" HorizontalAlignment="Stretch"
                                               TextAlignment="Right" FontWeight="Bold" FontSize="15" />
                                </DockPanel>
                                <TextBlock Text="Actor's Tag:" HorizontalAlignment="Left" FontWeight="Bold"
                                           FontSize="15" />
                                <TextBox Name="TextBox_Speaker_Name"
                                         Text="{Binding Path=SelectedSpeaker.SpeakerName, UpdateSourceTrigger=PropertyChanged}"
                                         HorizontalAlignment="Stretch" FontWeight="Bold" FontSize="20"
                                         HorizontalContentAlignment="Left" BorderBrush="LightGray" BorderThickness="0"
                                         KeyUp="EnterName_Speaker_KeyUp" GotKeyboardFocus="EditBox_GotKeyboardFocus"
                                         LostKeyboardFocus="EditBox_LostKeyboardFocus" />
                                <TextBlock Text="" FontSize="10" />
                                <DockPanel>
                                    <TextBlock Text="TLKString:" DockPanel.Dock="Left" HorizontalAlignment="Left"
                                               ToolTip="Actor's named TLK string." FontSize="15" />
                                    <TextBlock Name="TextBox_Speaker_TLK"
                                               Text="{Binding Path=SelectedSpeaker.StrRefID, UpdateSourceTrigger=PropertyChanged}"
                                               FontSize="15" DockPanel.Dock="Right" HorizontalAlignment="Right"
                                               ToolTip="Actor's named TLK string. Possibly." />
                                </DockPanel>
                                <TextBlock Name="TextBox_Speaker_FriendlyName"
                                           Text="{Binding Path=SelectedSpeaker.FriendlyName, UpdateSourceTrigger=PropertyChanged}"
                                           FontSize="20" HorizontalAlignment="Left" ToolTip="Actor's name. Possibly." />
                                <TextBlock Text="" FontSize="10" />
                                <DockPanel HorizontalAlignment="Stretch">
                                    <TextBlock Text="Male FaceFX Animation Set:" VerticalAlignment="Bottom"
                                               HorizontalAlignment="Left"
                                               ToolTip="Facial Animations for when the Player is Male"
                                               DockPanel.Dock="Left" />
                                    <Button Name="Button_Spkr_OpenFFXM" Padding="3" DockPanel.Dock="Right"
                                            Command="{Binding OpenInCommand}" CommandParameter="FaceFXSpkrM"
                                            ToolTip="Open this Speaker's Male AnimSet in FaceFX Editor.">
                                        <Button.Content>
                                            <fa:ImageAwesome Icon="Solid_TheaterMasks" Width="16" Height="16"
                                                             Foreground="DarkBlue" />
                                        </Button.Content>
                                    </Button>
                                    <TextBlock Text="" FontSize="10" />
                                </DockPanel>
                                <ComboBox Name="ComboBox_Speaker_FFXM" ItemsSource="{Binding Path=FFXAnimsets}"
                                          SelectedItem="{Binding Path=SelectedSpeaker.FaceFX_Male}"
                                          HorizontalAlignment="Stretch"
                                          ToolTip="Facial Animations for when the Player is Male" Margin="3"
                                          DropDownClosed="ComboBox_Speaker_FFX_DropDownClosed">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="{Binding Path=ObjectName.Instanced}"
                                                           FontStretch="Condensed" />
                                            </StackPanel>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                                <TextBlock Text="" FontSize="10" />
                                <DockPanel HorizontalAlignment="Stretch">
                                    <TextBlock Text="Female FaceFX Animation Set:" VerticalAlignment="Bottom"
                                               HorizontalAlignment="Left"
                                               ToolTip="Facial Animations for when the Player is Female"
                                               DockPanel.Dock="Left" />
                                    <Button Name="Button_Spkr_OpenFFXF" Padding="3" DockPanel.Dock="Right"
                                            Command="{Binding OpenInCommand}" CommandParameter="FaceFXSpkrF"
                                            ToolTip="Open this Speaker's Female AnimSet in FaceFX Editor.">
                                        <Button.Content>
                                            <fa:ImageAwesome Icon="Solid_TheaterMasks" Width="16" Height="16"
                                                             Foreground="DarkBlue" />
                                        </Button.Content>
                                    </Button>
                                    <TextBlock Text="" />
                                </DockPanel>
                                <ComboBox Name="ComboBox_Speaker_FFXF" ItemsSource="{Binding Path=FFXAnimsets}"
                                          SelectedItem="{Binding Path=SelectedSpeaker.FaceFX_Female}"
                                          HorizontalAlignment="Stretch"
                                          ToolTip="Facial Animations for when the Player is Female" Margin="3"
                                          DropDownClosed="ComboBox_Speaker_FFX_DropDownClosed">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="{Binding Path=ObjectName.Instanced}"
                                                           FontStretch="Condensed" />
                                            </StackPanel>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                                <TextBlock Text="" FontSize="10" />
                            </StackPanel>
                            <!--Node Panel-->
                            <Grid Name="Node_Panel" Visibility="Collapsed"
                                  ScrollViewer.VerticalScrollBarVisibility="Auto">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="3*" MinHeight="160" />
                                    <RowDefinition MinHeight="210" />
                                </Grid.RowDefinitions>
                                <StackPanel Grid.Row="0">
                                    <DockPanel HorizontalAlignment="Stretch">
                                        <TextBlock Name="Node_Text_Type" Text="Dialogue Node"
                                                   HorizontalAlignment="Left" FontWeight="Bold" FontSize="18"
                                                   DockPanel.Dock="Left" Padding="5" />
                                        <TextBlock
                                            Text="{Binding Path=SelectedDialogueNode.NodeCount, UpdateSourceTrigger=PropertyChanged}"
                                            VerticalAlignment="Center" HorizontalAlignment="Stretch"
                                            TextAlignment="Left" DockPanel.Dock="Right" FontWeight="Bold" FontSize="18" />
                                    </DockPanel>
                                    <TextBlock Name="Node_Text_LineString"
                                               Text="{Binding Path=SelectedDialogueNode.Line, Mode=OneWay}"
                                               TextWrapping="Wrap" HorizontalAlignment="Left" FontWeight="Bold"
                                               FontSize="15" DockPanel.Dock="Left" Padding="5"
                                               ToolTip="Right mouse click to copy"
                                               MouseRightButtonUp="CopyStringToClipboard_Click">

                                    </TextBlock>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="Line String Ref:  " FontSize="15" />
                                        <TextBox Name="Node_Text_StrRef"
                                                 Text="{Binding Path=SelectedDialogueNode.LineStrRef, UpdateSourceTrigger=Explicit}"
                                                 HorizontalAlignment="Stretch" FontWeight="Bold" FontSize="15"
                                                 HorizontalContentAlignment="Left" BorderBrush="LightGray"
                                                 BorderThickness="0" GotKeyboardFocus="EditBox_GotKeyboardFocus"
                                                 LostKeyboardFocus="EditBox_LostKeyboardFocus"
                                                 KeyUp="EditBox_Node_KeyUp" PreviewTextInput="NumberValidationEditBox" />
                                    </StackPanel>
                                    <DockPanel ToolTip="The speaker of the line.  Replies are always player">
                                        <TextBlock Text="Speaker: " FontSize="15" DockPanel.Dock="Left"
                                                   VerticalAlignment="Center" />
                                        <ComboBox Name="Node_Combo_Spkr"
                                                  ItemsSource="{Binding SelectedSpeakerList, Mode=OneWay}"
                                                  SelectedValue="{Binding Path=SelectedDialogueNode.SpeakerIndex}"
                                                  SelectedValuePath="SpeakerID" IsSynchronizedWithCurrentItem="True"
                                                  TextSearch.TextPath="SpeakerName" IsEditable="True"
                                                  HorizontalAlignment="Stretch" ToolTip="Line speaker" Margin="3"
                                                  DockPanel.Dock="Right">
                                            <ComboBox.ItemTemplate>
                                                <DataTemplate>
                                                    <StackPanel Orientation="Horizontal">
                                                        <TextBlock Text="{Binding Path=SpeakerID}" Width="30" />
                                                        <TextBlock Text="{Binding Path=SpeakerName}" />
                                                    </StackPanel>
                                                </DataTemplate>
                                            </ComboBox.ItemTemplate>
                                        </ComboBox>
                                    </DockPanel>
                                    <DockPanel
                                        ToolTip="To whom the speaker is addressing. The speaker will look at the listener.">
                                        <TextBlock Text="Listener: " FontSize="15" DockPanel.Dock="Left"
                                                   VerticalAlignment="Center" />
                                        <ComboBox Name="Node_Combo_Lstnr"
                                                  ItemsSource="{Binding ListenersList, Mode=OneWay}"
                                                  SelectedValue="{Binding Path=SelectedDialogueNode.Listener}"
                                                  SelectedValuePath="SpeakerID" IsSynchronizedWithCurrentItem="True"
                                                  IsEditable="True" HorizontalAlignment="Stretch"
                                                  ToolTip="Line speaker" Margin="3" DockPanel.Dock="Right"
                                                  TextSearch.TextPath="SpeakerName">
                                            <ComboBox.ItemTemplate>
                                                <DataTemplate>
                                                    <StackPanel Orientation="Horizontal">
                                                        <TextBlock Text="{Binding Path=SpeakerID}" Width="30" />
                                                        <TextBlock Text="{Binding Path=SpeakerName}" />
                                                    </StackPanel>
                                                </DataTemplate>
                                            </ComboBox.ItemTemplate>
                                        </ComboBox>
                                    </DockPanel>
                                </StackPanel>
                                <TabControl Name="Node_Tab_Detail" Grid.Row="1">
                                    <TabItem Header="Plot Control"
                                             ToolTip="Set which plots determine if this line is played, and which plots are set if it does.">
                                        <StackPanel Margin="4">
                                            <TextBlock Text="Plot checks" />
                                            <DockPanel HorizontalAlignment="Stretch">
                                                <TextBlock Text="Conditional/Bool: " DockPanel.Dock="Left"
                                                           FontSize="15" />
                                                <ComboBox HorizontalAlignment="Stretch" VerticalAlignment="Top"
                                                          SelectedIndex="{Binding Path=SelectedDialogueNode.FiresConditional, Converter={StaticResource BoolToIndexConverter}}">
                                                    <ComboBoxItem Content="Bool" IsSelected="False" />
                                                    <ComboBoxItem Content="Conditional" IsSelected="True" />
                                                </ComboBox>
                                            </DockPanel>
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Name="Node_Text_Cnd" Text="Conditional :" FontSize="15"></TextBlock>
                                                <TextBox Text="{Binding Path=SelectedDialogueNode.ConditionalOrBool}"
                                                         HorizontalAlignment="Stretch" FontWeight="Bold" FontSize="15"
                                                         HorizontalContentAlignment="Left" BorderBrush="LightGray"
                                                         BorderThickness="0"
                                                         GotKeyboardFocus="EditBox_GotKeyboardFocus"
                                                         LostKeyboardFocus="EditBox_LostKeyboardFocus"
                                                         KeyUp="EditBox_Node_KeyUp"
                                                         PreviewTextInput="NumberValidationEditBox" />
                                            </StackPanel>
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="Conditional Parameter:  " FontSize="15" />
                                                <TextBox Name="Node_Text_CndParam"
                                                         Text="{Binding Path=SelectedDialogueNode.ConditionalParam}"
                                                         HorizontalAlignment="Stretch" FontWeight="Bold" FontSize="15"
                                                         HorizontalContentAlignment="Left" BorderBrush="LightGray"
                                                         BorderThickness="0"
                                                         GotKeyboardFocus="EditBox_GotKeyboardFocus"
                                                         LostKeyboardFocus="EditBox_LostKeyboardFocus"
                                                         KeyUp="EditBox_Node_KeyUp"
                                                         PreviewTextInput="NumberValidationEditBox" />
                                            </StackPanel>
                                            <TextBlock Name="Node_Text_CndPath" Text="{Binding Path=SelectedDialogueNode.ConditionalPlotPath}"
                                                       Visibility="{Binding Path=SelectedDialogueNode.ConditionalPlotPath, Converter={StaticResource NullVisibilityConverter}}"
                                                       TextWrapping="Wrap"/>
                                            <Separator />
                                            <TextBlock Text="Plot transitions" />
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="Transition:  " FontSize="15" />
                                                <TextBox Name="Node_Text_Trans"
                                                         Text="{Binding Path=SelectedDialogueNode.Transition}"
                                                         HorizontalAlignment="Stretch" FontWeight="Bold" FontSize="15"
                                                         HorizontalContentAlignment="Left" BorderBrush="LightGray"
                                                         BorderThickness="0"
                                                         GotKeyboardFocus="EditBox_GotKeyboardFocus"
                                                         LostKeyboardFocus="EditBox_LostKeyboardFocus"
                                                         KeyUp="EditBox_Node_KeyUp"
                                                         PreviewTextInput="NumberValidationEditBox" />
                                            </StackPanel>
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="Transition Parameter:  " FontSize="15" />
                                                <TextBox Name="Node_Text_TransParam"
                                                         Text="{Binding Path=SelectedDialogueNode.TransitionParam}"
                                                         HorizontalAlignment="Stretch" FontWeight="Bold" FontSize="15"
                                                         HorizontalContentAlignment="Left" BorderBrush="LightGray"
                                                         BorderThickness="0"
                                                         GotKeyboardFocus="EditBox_GotKeyboardFocus"
                                                         LostKeyboardFocus="EditBox_LostKeyboardFocus"
                                                         KeyUp="EditBox_Node_KeyUp"
                                                         PreviewTextInput="NumberValidationEditBox" />
                                            </StackPanel>
                                            <TextBlock Name="Node_Text_TransPath" Text="{Binding Path=SelectedDialogueNode.TransitionPlotPath}"
                                                       Visibility="{Binding Path=SelectedDialogueNode.TransitionPlotPath, Converter={StaticResource NullVisibilityConverter}}"
                                                       TextWrapping="Wrap"/>
                                        </StackPanel>
                                    </TabItem>
                                    <TabItem Header="Matinee"
                                             ToolTip="Line settings for cutscene, animation and camera control."
                                             FocusManager.FocusedElement="{Binding}">
                                        <StackPanel>
                                            <DockPanel HorizontalAlignment="Stretch">
                                                <TextBlock Text="Line InterpData: " HorizontalAlignment="Left"
                                                           VerticalAlignment="Center"
                                                           ToolTip="Matinee object for this line."
                                                           DockPanel.Dock="Left" FontSize="15" Margin="2" />
                                                <Button Name="OpenLinePE_Button" Command="{Binding OpenInCommand}"
                                                        CommandParameter="PackEdLine" Padding="3"
                                                        DockPanel.Dock="Right"
                                                        ToolTip="Open this line's interpdata in Package editor">
                                                    <Button.Content>
                                                        <fa:ImageAwesome Icon="Solid_Cube" Width="16" Height="16"
                                                                         Foreground="DarkBlue" />
                                                    </Button.Content>
                                                </Button>
                                                <Button Name="OpenLineSE_Button" Command="{Binding OpenInCommand}"
                                                        CommandParameter="SeqEdLine" Padding="3" DockPanel.Dock="Right"
                                                        ToolTip="Open this line's sequence">
                                                    <Button.Content>
                                                        <fa:ImageAwesome Icon="Solid_ProjectDiagram" Width="16"
                                                                         Height="16" Foreground="DarkBlue" />
                                                    </Button.Content>
                                                </Button>
                                                <Button Name="OpenLineIE_Button" Command="{Binding OpenInCommand}"
                                                        CommandParameter="InterpEdLine" Padding="3"
                                                        DockPanel.Dock="Right" ToolTip="Open this line in interpeditor">
                                                    <Button.Content>
                                                        <fa:ImageAwesome Icon="Solid_SlidersH" Width="16" Height="16"
                                                                         Foreground="DarkBlue" />
                                                    </Button.Content>
                                                </Button>
                                                <TextBlock
                                                    Text="{Binding Path=SelectedDialogueNode.Interpdata.UIndex, TargetNullValue=None, FallbackValue=None}"
                                                    Name="Interpdata_TxtBx" HorizontalAlignment="Left"
                                                    VerticalAlignment="Bottom"
                                                    ToolTip="Matinee interpdata for this line." FontSize="15"
                                                    Margin="2" MouseRightButtonUp="CopyStringToClipboard_Click" />
                                            </DockPanel>
                                            <StackPanel Orientation="Horizontal"
                                                        ToolTip="Length in secs of matinee interpdata.">
                                                <TextBlock Text="InterpLength: " VerticalAlignment="Center"
                                                           FontSize="15" Margin="2" />
                                                <TextBox Text="{Binding Path=SelectedDialogueNode.InterpLength}"
                                                         Name="InterpLength_TxtBx" HorizontalAlignment="Stretch"
                                                         FontSize="15" VerticalAlignment="Center"
                                                         HorizontalContentAlignment="Left" BorderBrush="LightGray"
                                                         BorderThickness="0" IsReadOnly="True" />
                                                <TextBlock Text="seconds" VerticalAlignment="Center" FontSize="15"
                                                           Margin="2" />
                                            </StackPanel>
                                            <StackPanel Orientation="Horizontal"
                                                        ToolTip="Link to Matinee via BioSeqEvent_Conv">
                                                <TextBlock Name="Node_Text_Export" Text="ExportID:  "
                                                           VerticalAlignment="Center" FontSize="15" Margin="2" />
                                                <TextBox Text="{Binding Path=SelectedDialogueNode.ExportID}"
                                                         HorizontalAlignment="Stretch" FontSize="15"
                                                         VerticalAlignment="Center" HorizontalContentAlignment="Left"
                                                         BorderBrush="LightGray" BorderThickness="0"
                                                         GotKeyboardFocus="EditBox_GotKeyboardFocus"
                                                         LostKeyboardFocus="EditBox_LostKeyboardFocus"
                                                         KeyUp="EditBox_Node_KeyUp"
                                                         PreviewTextInput="NumberValidationEditBox" />
                                            </StackPanel>
                                            <Separator />

                                            <CheckBox Name="Node_CB_NonTextline" Content="Non vocal line"
                                                      IsChecked="{Binding Path=SelectedDialogueNode.IsNonTextLine, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                      FontSize="15" VerticalAlignment="Center"
                                                      ToolTip="Non-textline where only Matinee plays no vocals." />
                                            <CheckBox Name="Node_CB_bAmbient" Content="Ambient line"
                                                      IsChecked="{Binding Path=SelectedDialogueNode.IsAmbient, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                      VerticalAlignment="Center"
                                                      ToolTip="Ambient line. Camera remains under player control."
                                                      FontSize="15" />
                                            <CheckBox Name="Node_CB_BdyGesture" Content="Ignore Body Gestures"
                                                      IsChecked="{Binding Path=SelectedDialogueNode.IgnoreBodyGesture, Mode=TwoWay}"
                                                      ToolTip="Ignore non-facial matinee gestures." FontSize="15"
                                                      VerticalAlignment="Center" />
                                            <StackPanel Orientation="Horizontal"
                                                        ToolTip="1-5. Controls how far the camera is away from the speakers face during autoconversations.">
                                                <TextBlock Text="Camera Intimacy:  " FontSize="15" />
                                                <xctk:IntegerUpDown Name="Node_Text_CamInt"
                                                                    Value="{Binding Path=SelectedDialogueNode.CameraIntimacy}"
                                                                    HorizontalAlignment="Stretch" FontSize="12"
                                                                    Margin="2" />
                                            </StackPanel>
                                            <DockPanel ToolTip="Links to event scripts that fire new sequences. ">
                                                <TextBlock Text="Script: " VerticalAlignment="Center" FontSize="15"
                                                           DockPanel.Dock="Left" />
                                                <ComboBox Name="Node_Combo_ScriptIndex" MinWidth="80"
                                                          ItemsSource="{Binding Path=SelectedConv.ScriptList}"
                                                          SelectedItem="{Binding Path=SelectedDialogueNode.Script }"
                                                          IsSynchronizedWithCurrentItem="False"
                                                          VerticalAlignment="Center"
                                                          Style="{StaticResource {x:Type ComboBox}}"
                                                          IsTextSearchEnabled="True" HorizontalAlignment="Stretch"
                                                          Margin="2" />
                                            </DockPanel>
                                        </StackPanel>
                                    </TabItem>
                                    <TabItem Header="GUI Control" ToolTip="Settings for the line's user interaction.">
                                        <StackPanel ScrollViewer.VerticalScrollBarVisibility="Visible">
                                            <CheckBox Name="Node_CB_HideSubs" Content="Hide Subtitle"
                                                      IsChecked="{Binding Path=SelectedDialogueNode.HideSubtitle}"
                                                      FontSize="15" VerticalAlignment="Center"
                                                      ToolTip="Always hide the subtitles." Margin="2" />
                                            <ComboBox Name="Node_Combo_GUIStyle" MinWidth="80"
                                                      SelectedItem="{Binding Path=SelectedDialogueNode.GUIStyle}"
                                                      VerticalAlignment="Center"
                                                      ToolTip="Determines how the GUI looks. Primarily used in ME1."
                                                      Style="{StaticResource {x:Type ComboBox}}"
                                                      IsTextSearchEnabled="True" />
                                            <Separator />
                                            <TextBlock Text="Entry:" FontSize="12" />
                                            <CheckBox Name="Node_CB_ESkippable" Content="Skippable"
                                                      IsChecked="{Binding Path=SelectedDialogueNode.IsSkippable}"
                                                      FontSize="15" VerticalAlignment="Center"
                                                      ToolTip="Player can skip this entry." Margin="2" />
                                            <Separator />
                                            <TextBlock Text="Reply:" FontSize="12" />
                                            <ComboBox Name="Node_Combo_ReplyType" MinWidth="80"
                                                      SelectedItem="{Binding Path=SelectedDialogueNode.ReplyType}"
                                                      VerticalAlignment="Center"
                                                      Style="{StaticResource {x:Type ComboBox}}"
                                                      IsTextSearchEnabled="True"
                                                      ToolTip="Autocontinue: the reply moves straight to the reply list.&#x0a;Standard: Dialogue is played as normal.&#x0a;DialogEnd: The conversation is ended."
                                                      Margin="2" />
                                            <CheckBox Name="Node_CB_RUnskippable" Content="Unskippable"
                                                      IsChecked="{Binding Path=SelectedDialogueNode.IsUnskippable}"
                                                      FontSize="15" VerticalAlignment="Center"
                                                      ToolTip="Player can never skip this reply." Margin="2" />
                                            <DockPanel>
                                                <CheckBox Name="Node_CB_RDefault" Content="Default Reply"
                                                          IsChecked="{Binding Path=SelectedDialogueNode.IsDefaultAction}"
                                                          VerticalAlignment="Center" FontSize="15"
                                                          ToolTip="ME3: On action mode this reply is always selected."
                                                          Margin="2" DockPanel.Dock="Left" />
                                                <CheckBox Name="Node_CB_RMajor" Content="Major Decision"
                                                          IsChecked="{Binding Path=SelectedDialogueNode.IsMajorDecision}"
                                                          HorizontalAlignment="Center"
                                                          ToolTip="ME3: decision forced on player in all story modes."
                                                          FontSize="15" VerticalAlignment="Center" Margin="2"
                                                          DockPanel.Dock="Right" />
                                            </DockPanel>
                                        </StackPanel>
                                    </TabItem>
                                    <TabItem Header="Assets" ToolTip="Audio and animation assets used by this line">
                                        <StackPanel>
                                            <StackPanel>
                                                <TextBlock Text="Male:" FontSize="12" />
                                                <DockPanel HorizontalAlignment="Stretch">
                                                    <TextBlock Text="Wwisestream:" VerticalAlignment="Bottom"
                                                               HorizontalAlignment="Left"
                                                               ToolTip="Male audio for this line."
                                                               DockPanel.Dock="Left" FontSize="15" Margin="3" />
                                                    <Button Name="WwStreamMPackEd_Button"
                                                            Command="{Binding OpenInCommand}"
                                                            CommandParameter="PackEd_StreamM" Padding="3"
                                                            ToolTip="Open this stream in Package Editor"
                                                            DockPanel.Dock="Right">
                                                        <Button.Content>
                                                            <fa:ImageAwesome Icon="Solid_Cube" Width="16" Height="16"
                                                                             Foreground="DarkBlue" />
                                                        </Button.Content>
                                                    </Button>
                                                    <Button Name="Open_WwStreamM_Button" Padding="3"
                                                            DockPanel.Dock="Right"
                                                            Command="{Binding OpenInCommand}"
                                                            CommandParameter="SoundP_StreamM"
                                                            ToolTip="Open In Sound Explorer">
                                                        <Button.Content>
                                                            <fa:ImageAwesome Icon="Solid_VolumeUp" Width="16"
                                                                             Height="16" Foreground="DarkBlue" />
                                                        </Button.Content>
                                                    </Button>
                                                    <TextBlock
                                                        Text="{Binding Path=SelectedDialogueNode.WwiseStream_Male.UIndex, TargetNullValue=None, FallbackValue=None}"
                                                        HorizontalAlignment="Center" VerticalAlignment="Center"
                                                        ToolTip="Male audio for this line." FontSize="15" Margin="2" />
                                                </DockPanel>
                                                <DockPanel HorizontalAlignment="Stretch">
                                                    <TextBlock Text="FaceFX:" VerticalAlignment="Bottom"
                                                               HorizontalAlignment="Left"
                                                               ToolTip="Male facial animations for this line."
                                                               DockPanel.Dock="Left" FontSize="15" Margin="3" />
                                                    <Button Name="Open_ffxM_Button" Padding="3" DockPanel.Dock="Right"
                                                            Command="{Binding OpenInCommand}"
                                                            CommandParameter="FaceFXLineM"
                                                            ToolTip="Open this line in FaceFX Editor">
                                                        <Button.Content>
                                                            <fa:ImageAwesome Icon="Solid_TheaterMasks" Width="16"
                                                                             Height="16" Foreground="DarkBlue" />
                                                        </Button.Content>
                                                    </Button>
                                                    <TextBlock
                                                        Text="{Binding Path=SelectedDialogueNode.FaceFX_Male, TargetNullValue=None, FallbackValue=None}"
                                                        HorizontalAlignment="Center" VerticalAlignment="Center"
                                                        ToolTip="Male facial animations for this line." FontSize="15"
                                                        Margin="2" />
                                                </DockPanel>
                                            </StackPanel>
                                            <Separator />
                                            <StackPanel>
                                                <TextBlock Text="Female:" FontSize="12" />
                                                <DockPanel HorizontalAlignment="Stretch">
                                                    <TextBlock Text="Wwisestream:" VerticalAlignment="Bottom"
                                                               HorizontalAlignment="Left"
                                                               ToolTip="Female audio for this line."
                                                               DockPanel.Dock="Left" FontSize="15" Margin="3" />
                                                    <Button Name="WwStreamFPackEd_Button"
                                                            Command="{Binding OpenInCommand}"
                                                            CommandParameter="PackEd_StreamF" Padding="3"
                                                            ToolTip="Open this stream in Package Editor"
                                                            DockPanel.Dock="Right">
                                                        <Button.Content>
                                                            <fa:ImageAwesome Icon="Solid_Cube" Width="16" Height="16"
                                                                             Foreground="DarkBlue" />
                                                        </Button.Content>
                                                    </Button>
                                                    <Button Name="Open_WwStreamF_Button" Padding="3"
                                                            DockPanel.Dock="Right"
                                                            Command="{Binding OpenInCommand}"
                                                            CommandParameter="SoundP_StreamF"
                                                            ToolTip="Open this stream in Soundplorer">
                                                        <Button.Content>
                                                            <fa:ImageAwesome Icon="Solid_VolumeUp" Width="16"
                                                                             Height="16" Foreground="DarkBlue" />
                                                        </Button.Content>
                                                    </Button>
                                                    <TextBlock
                                                        Text="{Binding Path=SelectedDialogueNode.WwiseStream_Female.UIndex, TargetNullValue=None, FallbackValue=None}"
                                                        HorizontalAlignment="Center" VerticalAlignment="Center"
                                                        ToolTip="Female audio for this line." FontSize="15" Margin="2" />
                                                </DockPanel>
                                                <DockPanel HorizontalAlignment="Stretch">
                                                    <TextBlock Text="FaceFX:" VerticalAlignment="Bottom"
                                                               HorizontalAlignment="Left"
                                                               ToolTip="Female facial animations for this line."
                                                               DockPanel.Dock="Left" FontSize="15" Margin="3" />
                                                    <Button Name="Open_ffxF_Button" Padding="3" DockPanel.Dock="Right"
                                                            Command="{Binding OpenInCommand}"
                                                            CommandParameter="FaceFXLineF"
                                                            ToolTip="Open this line in FaceFX Editor">
                                                        <Button.Content>
                                                            <fa:ImageAwesome Icon="Solid_TheaterMasks" Width="16"
                                                                             Height="16" Foreground="DarkBlue" />
                                                        </Button.Content>
                                                    </Button>
                                                    <TextBlock
                                                        Text="{Binding Path=SelectedDialogueNode.FaceFX_Female, TargetNullValue=None, FallbackValue=None}"
                                                        HorizontalAlignment="Center" VerticalAlignment="Center"
                                                        ToolTip="Female facial animations for this line." FontSize="15"
                                                        Margin="2" />
                                                </DockPanel>
                                            </StackPanel>
                                        </StackPanel>
                                    </TabItem>
                                </TabControl>
                            </Grid>
                            <!-- Start List -->
                            <StackPanel Name="Start_Panel" Visibility="Collapsed">
                                <TextBlock Text="Starting Nodes" HorizontalAlignment="Left" FontWeight="Bold"
                                           FontSize="18" DockPanel.Dock="Top" Padding="5" />
                                <DockPanel LastChildFill="False">
                                    <Grid Height="30" DockPanel.Dock="Top">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="40"></ColumnDefinition>
                                            <ColumnDefinition Width="*"></ColumnDefinition>
                                            <ColumnDefinition Width="31"></ColumnDefinition>
                                            <ColumnDefinition Width="31"></ColumnDefinition>
                                            <ColumnDefinition Width="31"></ColumnDefinition>
                                            <ColumnDefinition Width="31"></ColumnDefinition>
                                        </Grid.ColumnDefinitions>
                                        <Label Grid.Column="0" Background="GhostWhite">Order</Label>
                                        <Label Grid.Column="1" Background="GhostWhite">Entry Link</Label>
                                        <Button Name="StartAddButton" Command="{Binding StartAddCommand}"
                                                CommandParameter="Add" Padding="3" DockPanel.Dock="Right"
                                                IsEnabled="True" Grid.Column="2" Margin="2" ToolTip="Add a new start">
                                            <Button.Content>
                                                <fa:ImageAwesome Icon="Solid_PlusCircle" Width="16" Height="16"
                                                                 Foreground="DarkBlue" />
                                            </Button.Content>
                                        </Button>
                                        <Button Name="StartDeleteButton" Command="{Binding StartDeleteCommand}"
                                                Padding="3" DockPanel.Dock="Right" IsEnabled="True" Grid.Column="3"
                                                Margin="2" ToolTip="Delete selected start">
                                            <Button.Content>
                                                <fa:ImageAwesome Icon="Solid_MinusCircle" Width="16" Height="16"
                                                                 Foreground="DarkBlue" />
                                            </Button.Content>
                                        </Button>
                                        <Button Name="StartUpButton" Command="{Binding StartUpCommand}"
                                                CommandParameter="Up" Padding="3" DockPanel.Dock="Right"
                                                IsEnabled="True" Grid.Column="4" Margin="2"
                                                ToolTip="Move selected start up">
                                            <Button.Content>
                                                <fa:ImageAwesome Icon="Solid_ArrowCircleUp" Width="16" Height="16"
                                                                 Foreground="DarkBlue" />
                                            </Button.Content>
                                        </Button>
                                        <Button Name="StartDownButton" Command="{Binding StartDownCommand}"
                                                CommandParameter="Down" Padding="3" DockPanel.Dock="Right"
                                                IsEnabled="True" Grid.Column="5" Margin="2"
                                                ToolTip="Move selected start down">
                                            <Button.Content>
                                                <fa:ImageAwesome Icon="Solid_ArrowCircleDown" Width="16" Height="16"
                                                                 Foreground="DarkBlue" />
                                            </Button.Content>
                                        </Button>
                                    </Grid>
                                    <ListBox Name="Start_ListBox" DockPanel.Dock="Bottom"
                                             VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch"
                                             ScrollViewer.VerticalScrollBarVisibility="Visible"
                                             ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                             SelectionChanged="Start_ListBox_SelectionChanged" MinHeight="250">
                                        <ListBox.ItemTemplate>
                                            <DataTemplate>
                                                <Grid Margin="0,0,5,0" ScrollViewer.CanContentScroll="True"
                                                      ScrollViewer.VerticalScrollBarVisibility="Visible">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="40" />
                                                        <ColumnDefinition Width="*" />
                                                    </Grid.ColumnDefinitions>
                                                    <TextBlock Grid.Column="0"
                                                               Text="{Binding Key, UpdateSourceTrigger=PropertyChanged}" />
                                                    <TextBlock Grid.Column="1"
                                                               Text="{Binding Value, UpdateSourceTrigger=PropertyChanged}" />
                                                </Grid>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                        <ListBox.ItemContainerStyle>
                                            <Style>
                                                <Style.Triggers>
                                                    <Trigger Property="Selector.IsSelected" Value="True">
                                                        <Setter Property="TextElement.FontWeight" Value="Bold" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ListBox.ItemContainerStyle>
                                        <ListBox.ContextMenu>
                                            <ContextMenu>
                                                <MenuItem Header="Add New Start" Command="{Binding StartAddCommand}"
                                                          CommandParameter="Add" />
                                                <MenuItem Header="Delete Start" Command="{Binding StartDeleteCommand}" />
                                                <MenuItem Header="Edit Link" Command="{Binding StartEditCommand}"
                                                          CommandParameter="Edit" />
                                            </ContextMenu>
                                        </ListBox.ContextMenu>
                                    </ListBox>
                                </DockPanel>
                            </StackPanel>
                        </StackPanel>
                    </ScrollViewer>
                </DockPanel>

                <!-- Speaker List -->
                <DockPanel LastChildFill="True" Grid.Row="2" Grid.Column="2"
                           Visibility="{Binding Pcc, Converter={StaticResource NullVisibilityConverter}}">
                    <Grid DockPanel.Dock="Top" Height="30">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="40"></ColumnDefinition>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                            <ColumnDefinition Width="31"></ColumnDefinition>
                            <ColumnDefinition Width="31"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Label Grid.Column="0" Background="GhostWhite">ID</Label>
                        <Label Grid.Column="1" Background="GhostWhite">Speaker Tag</Label>
                        <Button Name="SpkrUpButton" Command="{Binding SpeakerMoveUpCommand}" CommandParameter="Up"
                                Padding="3" DockPanel.Dock="Right" IsEnabled="True" Grid.Column="2" Margin="2">
                            <Button.Content>
                                <fa:ImageAwesome Icon="Solid_ArrowCircleUp" Width="16" Height="16"
                                                 Foreground="DarkBlue" />
                            </Button.Content>
                        </Button>
                        <Button Name="SpkrDownButton" Command="{Binding SpeakerMoveDownCommand}"
                                CommandParameter="Down" Padding="3" DockPanel.Dock="Right" IsEnabled="True"
                                Grid.Column="3" Margin="2">
                            <Button.Content>
                                <fa:ImageAwesome Icon="Solid_ArrowCircleDown" Width="16" Height="16"
                                                 Foreground="DarkBlue" />
                            </Button.Content>
                        </Button>
                    </Grid>
                    <ListBox Name="Speakers_ListBox" DockPanel.Dock="Bottom"
                             ItemsSource="{Binding SelectedSpeakerList}"
                             SelectedItem="{Binding SelectedSpeaker, Mode=TwoWay}" HorizontalContentAlignment="Stretch"
                             ScrollViewer.VerticalScrollBarVisibility="Visible"
                             ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                             SelectionChanged="Speakers_ListBox_SelectionChanged"
                             MouseLeftButtonUp="ListBox_MouseLeftButtonUp">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Grid Margin="0,0,5,0" ScrollViewer.CanContentScroll="True"
                                      ScrollViewer.VerticalScrollBarVisibility="Visible">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="40" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0"
                                               Text="{Binding SpeakerID, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBlock Grid.Column="1"
                                               Text="{Binding SpeakerName, UpdateSourceTrigger=PropertyChanged}" />
                                </Grid>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                        <ListBox.ItemContainerStyle>
                            <Style>
                                <Style.Triggers>
                                    <Trigger Property="Selector.IsSelected" Value="True">
                                        <Setter Property="TextElement.FontWeight" Value="Bold" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ListBox.ItemContainerStyle>
                        <ListBox.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Add New Speaker" Command="{Binding AddSpeakerCommand}" />
                                <MenuItem Header="Delete Speaker" Command="{Binding DeleteSpeakerCommand}" />
                                <MenuItem Header="Rename" Command="{Binding ChangeNameCommand}"
                                          ToolTip="Rename the speaker's tag" />
                            </ContextMenu>
                        </ListBox.ContextMenu>
                    </ListBox>
                </DockPanel>

                <GridSplitter Grid.Row="1" Height="5" HorizontalAlignment="Stretch" Grid.Column="0" />
                <GridSplitter Grid.Row="0" Grid.RowSpan="3" Width="5" HorizontalAlignment="Stretch" Grid.Column="1" />
                <!-- Startup Recents Box -->
                <Grid Column="0" Row="2">
                    <Grid.RowDefinitions>
                        <RowDefinition MinHeight="100" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="300" />
                        <ColumnDefinition Width="5" />
                        <ColumnDefinition Width="300" />
                        <ColumnDefinition Width="1*" />
                    </Grid.ColumnDefinitions>
                    <StackPanel Grid.Column="0" Grid.ColumnSpan="3"
                                Visibility="{Binding Pcc, Converter={StaticResource NullVisibilityConverter}, ConverterParameter='Reversed'}">
                        <TextBlock Margin="5" Text="Welcome to the new Dialogue Editor" FontWeight="Bold" />
                        <TextBlock Margin="5">
                            Dialogue Editor is the enhanced visual version of the old Dialogue Editor.
                            <LineBreak />
                            The editor is visually based so you can see the dialogue tree and move/change connections
                            <LineBreak />
                            <LineBreak />
                            Instructions:
                            <LineBreak />
                            -  Click on a conversation in the bottom left corner to bring it into focus.
                            <LineBreak />
                            -  Left Click on entries or replies nodes to see detailed settings.
                            <LineBreak />
                            -  Right Click to clone or add new nodes.
                            <LineBreak />
                            -  Conversations always begin Start then Entry then Reply then Entry and so on.
                            <LineBreak />
                            -  Drag and drop connections to see the path in the conversation.
                            <LineBreak />
                            -  You can quickly find a line using the goto box (Ctrl + G).
                            <LineBreak />
                            -  All the colors and default layout can be set via the menu.
                            <LineBreak />
                        </TextBlock>
                    </StackPanel>
                    <sharedToolControls:RecentsControl x:Name="RecentsController" Grid.Column="3"
                                                       Visibility="{Binding Pcc, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type bases:WPFBase}},Converter={StaticResource NullVisibilityConverter}, ConverterParameter='Reversed'}" />

                    <!-- Conversation Box-->
                    <ListBox Name="Conversations_ListBox" Grid.Row="0" Grid.Column="0"
                             ItemsSource="{Binding Conversations}"
                             SelectionChanged="ConversationList_SelectedItemChanged"
                             MouseLeftButtonUp="ListBox_MouseLeftButtonUp" HorizontalContentAlignment="Stretch"
                             Visibility="{Binding Pcc, Converter={StaticResource NullVisibilityConverter}}">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Grid Margin="0,0,5,0">
                                    <Grid.Style>
                                        <Style TargetType="{x:Type Grid}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=Export.EntryHasPendingChanges}"
                                                             Value="true">
                                                    <Setter Property="Background" Value="Yellow" />
                                                    <Setter Property="ToolTip"
                                                            Value="This export has been modified but the file has not yet been saved" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsParsed}" Value="False">
                                                    <Setter Property="Background" Value="GhostWhite" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Grid.Style>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="40" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Text="{Binding Path=ExportUID}" />
                                    <TextBlock Grid.Column="1" Text="{Binding Path=ConvName}">
                                    </TextBlock>
                                </Grid>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                        <ListBox.ItemContainerStyle>
                            <Style TargetType="{x:Type ListBoxItem}">
                                <Setter Property="IsEnabled" Value="{Binding IsParsed}" />
                                <Style.Triggers>
                                    <Trigger Property="Selector.IsSelected" Value="True">
                                        <Setter Property="TextElement.FontWeight" Value="Bold" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ListBox.ItemContainerStyle>
                        <ListBox.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Open in Package Editor" Command="{Binding OpenInCommand}"
                                          CommandParameter="PackEdConv">
                                    <MenuItem.Icon>
                                        <Image Source="{StaticResource iconPackageEditor16}" Width="64"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="Open in Sequence Editor" Command="{Binding OpenInCommand}"
                                          CommandParameter="SeqEdNode">
                                    <MenuItem.Icon>
                                        <Image Source="{StaticResource iconSequenceEditor16}" Width="64"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                            </ContextMenu>
                        </ListBox.ContextMenu>
                    </ListBox>
                    <GridSplitter Grid.Row="0" Grid.Column="1" Width="5" HorizontalAlignment="Stretch"
                                  Visibility="{Binding Pcc, Converter={StaticResource NullVisibilityConverter}}" />
                    <!--Tab Control -->
                    <TabControl TabStripPlacement="Left" Grid.Row="0" Grid.Column="2" Grid.ColumnSpan="2"
                                Visibility="{Binding Pcc, Converter={StaticResource NullVisibilityConverter}, RelativeSource={RelativeSource AncestorType=Window}}">
                        <TabControl.Resources>
                            <Style TargetType="{x:Type TabItem}">
                                <Setter Property="HeaderTemplate">
                                    <Setter.Value>
                                        <DataTemplate>
                                            <ContentPresenter Content="{TemplateBinding Content}">
                                                <ContentPresenter.LayoutTransform>
                                                    <RotateTransform Angle="270" />
                                                </ContentPresenter.LayoutTransform>
                                            </ContentPresenter>
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Padding" Value="3" />
                            </Style>
                        </TabControl.Resources>
                        <TabItem Header="Properties">
                            <exportLoaderControls:InterpreterExportLoader x:Name="Properties_InterpreterWPF"
                                                                          HideHexBox="True" />
                        </TabItem>
                        <TabItem Header="InterpData" IsEnabled="False"></TabItem>
                        <TabItem Header="FaceFX">
                            <TabControl Name="faceFXEditorTabControl"
                                        SelectionChanged="GenderTabControl_SelectionChanged">
                                <TabControl.Resources>
                                    <Style TargetType="{x:Type TabItem}">
                                        <Setter Property="HeaderTemplate">
                                            <Setter.Value>
                                                <DataTemplate>
                                                    <ContentPresenter Content="{TemplateBinding Content}">
                                                        <ContentPresenter.LayoutTransform>
                                                            <RotateTransform Angle="0" />
                                                        </ContentPresenter.LayoutTransform>
                                                    </ContentPresenter>
                                                </DataTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="Padding" Value="3" />
                                    </Style>
                                </TabControl.Resources>
                                <TabItem x:Name="FaceFxTab_F" Header="Female">
                                    <exportLoaderControls:FaceFXAnimSetEditorControl
                                        x:Name="FaceFXAnimSetEditorControl_F" SingleLineMode="True" />
                                </TabItem>
                                <TabItem x:Name="FaceFxTab_M" Header="Male">
                                    <exportLoaderControls:FaceFXAnimSetEditorControl
                                        x:Name="FaceFXAnimSetEditorControl_M" SingleLineMode="True" />
                                </TabItem>
                            </TabControl>
                        </TabItem>
                        <TabItem Header="Audio">
                            <Grid Name="soundPanelTabControl">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <StackPanel Grid.Row="0" x:Name="SoundpanelFemaleControl" Margin="4,0">
                                    <TextBlock>Female</TextBlock>
                                    <exportLoaderControls:Soundpanel x:Name="SoundpanelWPF_F" MiniPlayerMode="True" />
                                </StackPanel>
                                <StackPanel Grid.Row="1" x:Name="SoundpanelMaleControl" Margin="4,0">
                                    <TextBlock>Male</TextBlock>
                                    <exportLoaderControls:Soundpanel x:Name="SoundpanelWPF_M" MiniPlayerMode="True" />
                                </StackPanel>
                            </Grid>
                        </TabItem>
                    </TabControl>
                </Grid>
                <sharedUi:WindowsFormsHostEx Grid.Column="0" Grid.Row="0" x:Name="GraphHost" VerticalAlignment="Stretch">
                    <dialogueEditor:ConvGraphEditor />
                </sharedUi:WindowsFormsHostEx>
                <GridSplitter Grid.Row="3" Height="5" HorizontalAlignment="Stretch" Grid.Column="0" Grid.ColumnSpan="3" />
            </Grid>
        </DockPanel>
        <xctk:BusyIndicator IsBusy="{Binding Path=IsBusy}" BusyContent="{Binding BusyText}"/>
    </Grid>
</bases:WPFBase>
