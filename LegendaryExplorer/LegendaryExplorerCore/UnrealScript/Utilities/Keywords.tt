<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
<# var keywords = new HashSet<string> //made it a Hashset so that if I accidently put a keyword into the array more than once it won't generate invalid code
    {
        "array",
        "delegate",
        "Class",
        "var",
        "struct",
        "enum",
        "const",
        "function",
        "state",
        "ignores",
        "defaultproperties",
        "structdefaultproperties",
        "extends",
        "within",
        "local",
        "if",
        "else",
        "switch",
        "while",
        "do",
        "until",
        "for",
        "foreach",
        "break",
        "continue",
        "stop",
        "return",
        "case",
        "default",
        "TRUE",
        "FALSE",
        "operator",
        "preoperator",
        "postoperator",
        "int",
        "bool",
        "float",
        "string",
        "stringref",
        "byte",
        "biomask4",
        "Name",
        "None",
        "static",
        "vect",
        "rot",
        "Self",
        "Super",
        "Global",
        "Object",
        "Length",
        "Add",
        "AddItem",
        "Insert",
        "InsertItem",
        "Remove",
        "RemoveItem",
        "Find",
        "Sort",
        "Vector",
        "Rotator",
        "Interface",
        "new",
        "assert",
        "goto",
        "replication",
        "__<>IN_EDITOR"
    };
#>
namespace LegendaryExplorerCore.UnrealScript.Utilities
{
	public static class Keywords
	{

<#
    foreach (string keyword in keywords) { #>
        public const string <#= keyword.Replace("<", "").Replace(">", "").ToUpper() #> = "<#= keyword #>";     
<# } #>
	}
}